
./Debug/ascii_display.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
#define B_RW 0x02
#define B_RS 0x01

void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f9dc 	bl	200003c0 <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <init_app>:

void init_app(void)
{
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	*GPIO_MODER = 0x55555555;
20000014:	4b04      	ldr	r3, [pc, #16]	; (20000028 <init_app+0x18>)
20000016:	4a05      	ldr	r2, [pc, #20]	; (2000002c <init_app+0x1c>)
20000018:	601a      	str	r2, [r3, #0]
	*GPIO_OTYPER = 0x00000000;
2000001a:	4b05      	ldr	r3, [pc, #20]	; (20000030 <init_app+0x20>)
2000001c:	2200      	movs	r2, #0
2000001e:	801a      	strh	r2, [r3, #0]
}
20000020:	46c0      	nop			; (mov r8, r8)
20000022:	46bd      	mov	sp, r7
20000024:	bd80      	pop	{r7, pc}
20000026:	46c0      	nop			; (mov r8, r8)
20000028:	40021000 	andmi	r1, r2, r0
2000002c:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
20000030:	40021004 	andmi	r1, r2, r4

20000034 <ascii_ctrl_bit_set>:

void ascii_ctrl_bit_set(unsigned char x)
{
20000034:	b580      	push	{r7, lr}
20000036:	b084      	sub	sp, #16
20000038:	af00      	add	r7, sp, #0
2000003a:	0002      	movs	r2, r0
2000003c:	1dfb      	adds	r3, r7, #7
2000003e:	701a      	strb	r2, [r3, #0]
	unsigned char c;
	c = *GPIO_ODR_LOW;
20000040:	4a0c      	ldr	r2, [pc, #48]	; (20000074 <ascii_ctrl_bit_set+0x40>)
20000042:	210f      	movs	r1, #15
20000044:	187b      	adds	r3, r7, r1
20000046:	7812      	ldrb	r2, [r2, #0]
20000048:	701a      	strb	r2, [r3, #0]
	c |= ( B_SELECT | x ); //Varför ettställa B_select?
2000004a:	1dfa      	adds	r2, r7, #7
2000004c:	187b      	adds	r3, r7, r1
2000004e:	7812      	ldrb	r2, [r2, #0]
20000050:	781b      	ldrb	r3, [r3, #0]
20000052:	4313      	orrs	r3, r2
20000054:	b2da      	uxtb	r2, r3
20000056:	0008      	movs	r0, r1
20000058:	187b      	adds	r3, r7, r1
2000005a:	2104      	movs	r1, #4
2000005c:	430a      	orrs	r2, r1
2000005e:	701a      	strb	r2, [r3, #0]
	*GPIO_ODR_LOW = c;
20000060:	4a04      	ldr	r2, [pc, #16]	; (20000074 <ascii_ctrl_bit_set+0x40>)
20000062:	0001      	movs	r1, r0
20000064:	187b      	adds	r3, r7, r1
20000066:	781b      	ldrb	r3, [r3, #0]
20000068:	7013      	strb	r3, [r2, #0]
}
2000006a:	46c0      	nop			; (mov r8, r8)
2000006c:	46bd      	mov	sp, r7
2000006e:	b004      	add	sp, #16
20000070:	bd80      	pop	{r7, pc}
20000072:	46c0      	nop			; (mov r8, r8)
20000074:	40021014 	andmi	r1, r2, r4, lsl r0

20000078 <ascii_ctrl_bit_clear>:

void ascii_ctrl_bit_clear(unsigned char x)
{
20000078:	b580      	push	{r7, lr}
2000007a:	b084      	sub	sp, #16
2000007c:	af00      	add	r7, sp, #0
2000007e:	0002      	movs	r2, r0
20000080:	1dfb      	adds	r3, r7, #7
20000082:	701a      	strb	r2, [r3, #0]
	unsigned char c;
	c = *GPIO_ODR_LOW;
20000084:	4a0d      	ldr	r2, [pc, #52]	; (200000bc <ascii_ctrl_bit_clear+0x44>)
20000086:	210f      	movs	r1, #15
20000088:	187b      	adds	r3, r7, r1
2000008a:	7812      	ldrb	r2, [r2, #0]
2000008c:	701a      	strb	r2, [r3, #0]
	c &= (B_SELECT | ~x); //~ bildar 1-komplement
2000008e:	1dfb      	adds	r3, r7, #7
20000090:	781b      	ldrb	r3, [r3, #0]
20000092:	b25b      	sxtb	r3, r3
20000094:	43db      	mvns	r3, r3
20000096:	b25b      	sxtb	r3, r3
20000098:	2204      	movs	r2, #4
2000009a:	4313      	orrs	r3, r2
2000009c:	b25b      	sxtb	r3, r3
2000009e:	187a      	adds	r2, r7, r1
200000a0:	7812      	ldrb	r2, [r2, #0]
200000a2:	b252      	sxtb	r2, r2
200000a4:	4013      	ands	r3, r2
200000a6:	b25a      	sxtb	r2, r3
200000a8:	187b      	adds	r3, r7, r1
200000aa:	701a      	strb	r2, [r3, #0]
	*GPIO_ODR_LOW = c;
200000ac:	4a03      	ldr	r2, [pc, #12]	; (200000bc <ascii_ctrl_bit_clear+0x44>)
200000ae:	187b      	adds	r3, r7, r1
200000b0:	781b      	ldrb	r3, [r3, #0]
200000b2:	7013      	strb	r3, [r2, #0]
}
200000b4:	46c0      	nop			; (mov r8, r8)
200000b6:	46bd      	mov	sp, r7
200000b8:	b004      	add	sp, #16
200000ba:	bd80      	pop	{r7, pc}
200000bc:	40021014 	andmi	r1, r2, r4, lsl r0

200000c0 <ascii_write_controller>:

void ascii_write_controller(unsigned char byte)
{
200000c0:	b580      	push	{r7, lr}
200000c2:	b082      	sub	sp, #8
200000c4:	af00      	add	r7, sp, #0
200000c6:	0002      	movs	r2, r0
200000c8:	1dfb      	adds	r3, r7, #7
200000ca:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_set( B_E );
200000cc:	2040      	movs	r0, #64	; 0x40
200000ce:	f7ff ffb1 	bl	20000034 <ascii_ctrl_bit_set>
	*GPIO_ODR_HIGH = byte;
200000d2:	4a06      	ldr	r2, [pc, #24]	; (200000ec <ascii_write_controller+0x2c>)
200000d4:	1dfb      	adds	r3, r7, #7
200000d6:	781b      	ldrb	r3, [r3, #0]
200000d8:	7013      	strb	r3, [r2, #0]
	delay_250ns();
200000da:	f000 f8c2 	bl	20000262 <delay_250ns>
	ascii_ctrl_bit_clear(B_E);	//Ska delay vara före eller efter detta?
200000de:	2040      	movs	r0, #64	; 0x40
200000e0:	f7ff ffca 	bl	20000078 <ascii_ctrl_bit_clear>
}
200000e4:	46c0      	nop			; (mov r8, r8)
200000e6:	46bd      	mov	sp, r7
200000e8:	b002      	add	sp, #8
200000ea:	bd80      	pop	{r7, pc}
200000ec:	40021015 	andmi	r1, r2, r5, lsl r0

200000f0 <ascii_read_controller>:

unsigned char ascii_read_controller(void)
{
200000f0:	b580      	push	{r7, lr}
200000f2:	b082      	sub	sp, #8
200000f4:	af00      	add	r7, sp, #0
	unsigned char rv;
	ascii_ctrl_bit_set( B_E );
200000f6:	2040      	movs	r0, #64	; 0x40
200000f8:	f7ff ff9c 	bl	20000034 <ascii_ctrl_bit_set>
	delay_250ns();
200000fc:	f000 f8b1 	bl	20000262 <delay_250ns>
	delay_250ns();
20000100:	f000 f8af 	bl	20000262 <delay_250ns>
	rv = *GPIO_IDR_HIGH;
20000104:	4a06      	ldr	r2, [pc, #24]	; (20000120 <ascii_read_controller+0x30>)
20000106:	1dfb      	adds	r3, r7, #7
20000108:	7812      	ldrb	r2, [r2, #0]
2000010a:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear( B_E );
2000010c:	2040      	movs	r0, #64	; 0x40
2000010e:	f7ff ffb3 	bl	20000078 <ascii_ctrl_bit_clear>
	return rv;
20000112:	1dfb      	adds	r3, r7, #7
20000114:	781b      	ldrb	r3, [r3, #0]
	
}
20000116:	0018      	movs	r0, r3
20000118:	46bd      	mov	sp, r7
2000011a:	b002      	add	sp, #8
2000011c:	bd80      	pop	{r7, pc}
2000011e:	46c0      	nop			; (mov r8, r8)
20000120:	40021011 	andmi	r1, r2, r1, lsl r0

20000124 <ascii_write_cmd>:

void ascii_write_cmd(unsigned char command)
{
20000124:	b580      	push	{r7, lr}
20000126:	b082      	sub	sp, #8
20000128:	af00      	add	r7, sp, #0
2000012a:	0002      	movs	r2, r0
2000012c:	1dfb      	adds	r3, r7, #7
2000012e:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_RS);
20000130:	2001      	movs	r0, #1
20000132:	f7ff ffa1 	bl	20000078 <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_clear(B_RW);
20000136:	2002      	movs	r0, #2
20000138:	f7ff ff9e 	bl	20000078 <ascii_ctrl_bit_clear>
	ascii_write_controller(command);
2000013c:	1dfb      	adds	r3, r7, #7
2000013e:	781b      	ldrb	r3, [r3, #0]
20000140:	0018      	movs	r0, r3
20000142:	f7ff ffbd 	bl	200000c0 <ascii_write_controller>
	
}
20000146:	46c0      	nop			; (mov r8, r8)
20000148:	46bd      	mov	sp, r7
2000014a:	b002      	add	sp, #8
2000014c:	bd80      	pop	{r7, pc}

2000014e <ascii_write_data>:

void ascii_write_data(unsigned char data)
{
2000014e:	b580      	push	{r7, lr}
20000150:	b082      	sub	sp, #8
20000152:	af00      	add	r7, sp, #0
20000154:	0002      	movs	r2, r0
20000156:	1dfb      	adds	r3, r7, #7
20000158:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RS);
2000015a:	2001      	movs	r0, #1
2000015c:	f7ff ff6a 	bl	20000034 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_clear(B_RW);
20000160:	2002      	movs	r0, #2
20000162:	f7ff ff89 	bl	20000078 <ascii_ctrl_bit_clear>
	ascii_write_controller(data);
20000166:	1dfb      	adds	r3, r7, #7
20000168:	781b      	ldrb	r3, [r3, #0]
2000016a:	0018      	movs	r0, r3
2000016c:	f7ff ffa8 	bl	200000c0 <ascii_write_controller>
}
20000170:	46c0      	nop			; (mov r8, r8)
20000172:	46bd      	mov	sp, r7
20000174:	b002      	add	sp, #8
20000176:	bd80      	pop	{r7, pc}

20000178 <ascii_read_status>:



unsigned char ascii_read_status(void)
{
20000178:	b590      	push	{r4, r7, lr}
2000017a:	b083      	sub	sp, #12
2000017c:	af00      	add	r7, sp, #0
	unsigned char rv;
	*GPIO_MODER &= 0x00005555;
2000017e:	4b0e      	ldr	r3, [pc, #56]	; (200001b8 <ascii_read_status+0x40>)
20000180:	681a      	ldr	r2, [r3, #0]
20000182:	4b0d      	ldr	r3, [pc, #52]	; (200001b8 <ascii_read_status+0x40>)
20000184:	490d      	ldr	r1, [pc, #52]	; (200001bc <ascii_read_status+0x44>)
20000186:	400a      	ands	r2, r1
20000188:	601a      	str	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RW);
2000018a:	2002      	movs	r0, #2
2000018c:	f7ff ff52 	bl	20000034 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_clear(B_RS);
20000190:	2001      	movs	r0, #1
20000192:	f7ff ff71 	bl	20000078 <ascii_ctrl_bit_clear>
	rv = ascii_read_controller();
20000196:	1dfc      	adds	r4, r7, #7
20000198:	f7ff ffaa 	bl	200000f0 <ascii_read_controller>
2000019c:	0003      	movs	r3, r0
2000019e:	7023      	strb	r3, [r4, #0]
	*GPIO_MODER |= 0x55555555;
200001a0:	4b05      	ldr	r3, [pc, #20]	; (200001b8 <ascii_read_status+0x40>)
200001a2:	681a      	ldr	r2, [r3, #0]
200001a4:	4b04      	ldr	r3, [pc, #16]	; (200001b8 <ascii_read_status+0x40>)
200001a6:	4906      	ldr	r1, [pc, #24]	; (200001c0 <ascii_read_status+0x48>)
200001a8:	430a      	orrs	r2, r1
200001aa:	601a      	str	r2, [r3, #0]
	return rv;
200001ac:	1dfb      	adds	r3, r7, #7
200001ae:	781b      	ldrb	r3, [r3, #0]
}
200001b0:	0018      	movs	r0, r3
200001b2:	46bd      	mov	sp, r7
200001b4:	b003      	add	sp, #12
200001b6:	bd90      	pop	{r4, r7, pc}
200001b8:	40021000 	andmi	r1, r2, r0
200001bc:	00005555 	andeq	r5, r0, r5, asr r5
200001c0:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

200001c4 <ascii_read_data>:

unsigned char ascii_read_data(void)
{
200001c4:	b590      	push	{r4, r7, lr}
200001c6:	b083      	sub	sp, #12
200001c8:	af00      	add	r7, sp, #0
	unsigned char rv;
	*GPIO_MODER &= 0x00005555;
200001ca:	4b0e      	ldr	r3, [pc, #56]	; (20000204 <ascii_read_data+0x40>)
200001cc:	681a      	ldr	r2, [r3, #0]
200001ce:	4b0d      	ldr	r3, [pc, #52]	; (20000204 <ascii_read_data+0x40>)
200001d0:	490d      	ldr	r1, [pc, #52]	; (20000208 <ascii_read_data+0x44>)
200001d2:	400a      	ands	r2, r1
200001d4:	601a      	str	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RS);
200001d6:	2001      	movs	r0, #1
200001d8:	f7ff ff2c 	bl	20000034 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_set(B_RW);
200001dc:	2002      	movs	r0, #2
200001de:	f7ff ff29 	bl	20000034 <ascii_ctrl_bit_set>
	rv = ascii_read_controller();
200001e2:	1dfc      	adds	r4, r7, #7
200001e4:	f7ff ff84 	bl	200000f0 <ascii_read_controller>
200001e8:	0003      	movs	r3, r0
200001ea:	7023      	strb	r3, [r4, #0]
	*GPIO_MODER |= 0x55555555;
200001ec:	4b05      	ldr	r3, [pc, #20]	; (20000204 <ascii_read_data+0x40>)
200001ee:	681a      	ldr	r2, [r3, #0]
200001f0:	4b04      	ldr	r3, [pc, #16]	; (20000204 <ascii_read_data+0x40>)
200001f2:	4906      	ldr	r1, [pc, #24]	; (2000020c <ascii_read_data+0x48>)
200001f4:	430a      	orrs	r2, r1
200001f6:	601a      	str	r2, [r3, #0]
	return rv;
200001f8:	1dfb      	adds	r3, r7, #7
200001fa:	781b      	ldrb	r3, [r3, #0]
}
200001fc:	0018      	movs	r0, r3
200001fe:	46bd      	mov	sp, r7
20000200:	b003      	add	sp, #12
20000202:	bd90      	pop	{r4, r7, pc}
20000204:	40021000 	andmi	r1, r2, r0
20000208:	00005555 	andeq	r5, r0, r5, asr r5
2000020c:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000210 <delay_milli>:

void delay_milli(int ms)
{
20000210:	b580      	push	{r7, lr}
20000212:	b082      	sub	sp, #8
20000214:	af00      	add	r7, sp, #0
20000216:	6078      	str	r0, [r7, #4]
	delay_micro(1);
20000218:	2001      	movs	r0, #1
2000021a:	f000 f804 	bl	20000226 <delay_micro>
}
2000021e:	46c0      	nop			; (mov r8, r8)
20000220:	46bd      	mov	sp, r7
20000222:	b002      	add	sp, #8
20000224:	bd80      	pop	{r7, pc}

20000226 <delay_micro>:

void delay_micro(int us)
{
20000226:	b580      	push	{r7, lr}
20000228:	b082      	sub	sp, #8
2000022a:	af00      	add	r7, sp, #0
2000022c:	6078      	str	r0, [r7, #4]
	us = us/10;
2000022e:	687b      	ldr	r3, [r7, #4]
20000230:	210a      	movs	r1, #10
20000232:	0018      	movs	r0, r3
20000234:	f000 f90c 	bl	20000450 <__divsi3>
20000238:	0003      	movs	r3, r0
2000023a:	607b      	str	r3, [r7, #4]
	while(us > 0)
2000023c:	e00a      	b.n	20000254 <delay_micro+0x2e>
	{
	delay_250ns();
2000023e:	f000 f810 	bl	20000262 <delay_250ns>
	delay_250ns();
20000242:	f000 f80e 	bl	20000262 <delay_250ns>
	delay_250ns();
20000246:	f000 f80c 	bl	20000262 <delay_250ns>
	delay_250ns();
2000024a:	f000 f80a 	bl	20000262 <delay_250ns>
	us--;
2000024e:	687b      	ldr	r3, [r7, #4]
20000250:	3b01      	subs	r3, #1
20000252:	607b      	str	r3, [r7, #4]
	while(us > 0)
20000254:	687b      	ldr	r3, [r7, #4]
20000256:	2b00      	cmp	r3, #0
20000258:	dcf1      	bgt.n	2000023e <delay_micro+0x18>
	}
}
2000025a:	46c0      	nop			; (mov r8, r8)
2000025c:	46bd      	mov	sp, r7
2000025e:	b002      	add	sp, #8
20000260:	bd80      	pop	{r7, pc}

20000262 <delay_250ns>:

void delay_250ns(void)
{
20000262:	b580      	push	{r7, lr}
20000264:	b082      	sub	sp, #8
20000266:	af00      	add	r7, sp, #0
	*STK_CTRL = 0;
20000268:	4b0f      	ldr	r3, [pc, #60]	; (200002a8 <delay_250ns+0x46>)
2000026a:	2200      	movs	r2, #0
2000026c:	601a      	str	r2, [r3, #0]
	*STK_LOAD = 0x29; //0x2A - 1
2000026e:	4b0f      	ldr	r3, [pc, #60]	; (200002ac <delay_250ns+0x4a>)
20000270:	2229      	movs	r2, #41	; 0x29
20000272:	601a      	str	r2, [r3, #0]
	*STK_VAL = 0x0;
20000274:	4b0e      	ldr	r3, [pc, #56]	; (200002b0 <delay_250ns+0x4e>)
20000276:	2200      	movs	r2, #0
20000278:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 5;
2000027a:	4b0b      	ldr	r3, [pc, #44]	; (200002a8 <delay_250ns+0x46>)
2000027c:	2205      	movs	r2, #5
2000027e:	601a      	str	r2, [r3, #0]
	unsigned int ctrl = *STK_CTRL & 0x10000;
20000280:	4b09      	ldr	r3, [pc, #36]	; (200002a8 <delay_250ns+0x46>)
20000282:	681a      	ldr	r2, [r3, #0]
20000284:	2380      	movs	r3, #128	; 0x80
20000286:	025b      	lsls	r3, r3, #9
20000288:	4013      	ands	r3, r2
2000028a:	607b      	str	r3, [r7, #4]
	while((*STK_CTRL & 0x10000) == 0);
2000028c:	46c0      	nop			; (mov r8, r8)
2000028e:	4b06      	ldr	r3, [pc, #24]	; (200002a8 <delay_250ns+0x46>)
20000290:	681a      	ldr	r2, [r3, #0]
20000292:	2380      	movs	r3, #128	; 0x80
20000294:	025b      	lsls	r3, r3, #9
20000296:	4013      	ands	r3, r2
20000298:	d0f9      	beq.n	2000028e <delay_250ns+0x2c>
	*STK_CTRL= 0;
2000029a:	4b03      	ldr	r3, [pc, #12]	; (200002a8 <delay_250ns+0x46>)
2000029c:	2200      	movs	r2, #0
2000029e:	601a      	str	r2, [r3, #0]
	
}
200002a0:	46c0      	nop			; (mov r8, r8)
200002a2:	46bd      	mov	sp, r7
200002a4:	b002      	add	sp, #8
200002a6:	bd80      	pop	{r7, pc}
200002a8:	e000e010 	and	lr, r0, r0, lsl r0
200002ac:	e000e014 	and	lr, r0, r4, lsl r0
200002b0:	e000e018 	and	lr, r0, r8, lsl r0

200002b4 <ascii_write_char>:

void ascii_write_char(unsigned char c)
{
200002b4:	b580      	push	{r7, lr}
200002b6:	b082      	sub	sp, #8
200002b8:	af00      	add	r7, sp, #0
200002ba:	0002      	movs	r2, r0
200002bc:	1dfb      	adds	r3, r7, #7
200002be:	701a      	strb	r2, [r3, #0]
	while((ascii_read_status() & 0x80) == 0x80){}
200002c0:	46c0      	nop			; (mov r8, r8)
200002c2:	f7ff ff59 	bl	20000178 <ascii_read_status>
200002c6:	0003      	movs	r3, r0
200002c8:	001a      	movs	r2, r3
200002ca:	2380      	movs	r3, #128	; 0x80
200002cc:	4013      	ands	r3, r2
200002ce:	2b80      	cmp	r3, #128	; 0x80
200002d0:	d0f7      	beq.n	200002c2 <ascii_write_char+0xe>
	delay_micro(8);
200002d2:	2008      	movs	r0, #8
200002d4:	f7ff ffa7 	bl	20000226 <delay_micro>
	ascii_write_data(c);
200002d8:	1dfb      	adds	r3, r7, #7
200002da:	781b      	ldrb	r3, [r3, #0]
200002dc:	0018      	movs	r0, r3
200002de:	f7ff ff36 	bl	2000014e <ascii_write_data>
	delay_micro(45);
200002e2:	202d      	movs	r0, #45	; 0x2d
200002e4:	f7ff ff9f 	bl	20000226 <delay_micro>
}
200002e8:	46c0      	nop			; (mov r8, r8)
200002ea:	46bd      	mov	sp, r7
200002ec:	b002      	add	sp, #8
200002ee:	bd80      	pop	{r7, pc}

200002f0 <ascii_gotoxy>:

void ascii_gotoxy(int row, int col)
{
200002f0:	b580      	push	{r7, lr}
200002f2:	b084      	sub	sp, #16
200002f4:	af00      	add	r7, sp, #0
200002f6:	6078      	str	r0, [r7, #4]
200002f8:	6039      	str	r1, [r7, #0]
	unsigned int adress;
	adress = row -1;
200002fa:	687b      	ldr	r3, [r7, #4]
200002fc:	3b01      	subs	r3, #1
200002fe:	60fb      	str	r3, [r7, #12]
	if(col == 2)
20000300:	683b      	ldr	r3, [r7, #0]
20000302:	2b02      	cmp	r3, #2
20000304:	d102      	bne.n	2000030c <ascii_gotoxy+0x1c>
	{
		adress = adress + 0x40;
20000306:	68fb      	ldr	r3, [r7, #12]
20000308:	3340      	adds	r3, #64	; 0x40
2000030a:	60fb      	str	r3, [r7, #12]
	}
	ascii_write_cmd(0x80|adress);
2000030c:	68fb      	ldr	r3, [r7, #12]
2000030e:	b2db      	uxtb	r3, r3
20000310:	2280      	movs	r2, #128	; 0x80
20000312:	4252      	negs	r2, r2
20000314:	4313      	orrs	r3, r2
20000316:	b2db      	uxtb	r3, r3
20000318:	0018      	movs	r0, r3
2000031a:	f7ff ff03 	bl	20000124 <ascii_write_cmd>
}
2000031e:	46c0      	nop			; (mov r8, r8)
20000320:	46bd      	mov	sp, r7
20000322:	b004      	add	sp, #16
20000324:	bd80      	pop	{r7, pc}

20000326 <ascii_init>:

void ascii_init(void)
{
20000326:	b580      	push	{r7, lr}
20000328:	af00      	add	r7, sp, #0
	while((ascii_read_status() & 0x80) == 0x80){}
2000032a:	46c0      	nop			; (mov r8, r8)
2000032c:	f7ff ff24 	bl	20000178 <ascii_read_status>
20000330:	0003      	movs	r3, r0
20000332:	001a      	movs	r2, r3
20000334:	2380      	movs	r3, #128	; 0x80
20000336:	4013      	ands	r3, r2
20000338:	2b80      	cmp	r3, #128	; 0x80
2000033a:	d0f7      	beq.n	2000032c <ascii_init+0x6>
	delay_micro(8);
2000033c:	2008      	movs	r0, #8
2000033e:	f7ff ff72 	bl	20000226 <delay_micro>
	ascii_write_cmd(0x38); //00111000
20000342:	2038      	movs	r0, #56	; 0x38
20000344:	f7ff feee 	bl	20000124 <ascii_write_cmd>
	delay_micro(40);
20000348:	2028      	movs	r0, #40	; 0x28
2000034a:	f7ff ff6c 	bl	20000226 <delay_micro>
	
	while((ascii_read_status() & 0x80) == 0x80){}
2000034e:	46c0      	nop			; (mov r8, r8)
20000350:	f7ff ff12 	bl	20000178 <ascii_read_status>
20000354:	0003      	movs	r3, r0
20000356:	001a      	movs	r2, r3
20000358:	2380      	movs	r3, #128	; 0x80
2000035a:	4013      	ands	r3, r2
2000035c:	2b80      	cmp	r3, #128	; 0x80
2000035e:	d0f7      	beq.n	20000350 <ascii_init+0x2a>
	delay_micro(8);
20000360:	2008      	movs	r0, #8
20000362:	f7ff ff60 	bl	20000226 <delay_micro>
	ascii_write_cmd(0x0D); //00001110
20000366:	200d      	movs	r0, #13
20000368:	f7ff fedc 	bl	20000124 <ascii_write_cmd>
	delay_micro(40);
2000036c:	2028      	movs	r0, #40	; 0x28
2000036e:	f7ff ff5a 	bl	20000226 <delay_micro>
	
	while((ascii_read_status() & 0x80) == 0x80){}
20000372:	46c0      	nop			; (mov r8, r8)
20000374:	f7ff ff00 	bl	20000178 <ascii_read_status>
20000378:	0003      	movs	r3, r0
2000037a:	001a      	movs	r2, r3
2000037c:	2380      	movs	r3, #128	; 0x80
2000037e:	4013      	ands	r3, r2
20000380:	2b80      	cmp	r3, #128	; 0x80
20000382:	d0f7      	beq.n	20000374 <ascii_init+0x4e>
	delay_micro(8);
20000384:	2008      	movs	r0, #8
20000386:	f7ff ff4e 	bl	20000226 <delay_micro>
	ascii_write_cmd(1);
2000038a:	2001      	movs	r0, #1
2000038c:	f7ff feca 	bl	20000124 <ascii_write_cmd>
	delay_milli(2);
20000390:	2002      	movs	r0, #2
20000392:	f7ff ff3d 	bl	20000210 <delay_milli>
	
	while((ascii_read_status() & 0x80) == 0x80){}
20000396:	46c0      	nop			; (mov r8, r8)
20000398:	f7ff feee 	bl	20000178 <ascii_read_status>
2000039c:	0003      	movs	r3, r0
2000039e:	001a      	movs	r2, r3
200003a0:	2380      	movs	r3, #128	; 0x80
200003a2:	4013      	ands	r3, r2
200003a4:	2b80      	cmp	r3, #128	; 0x80
200003a6:	d0f7      	beq.n	20000398 <ascii_init+0x72>
	delay_micro(8);
200003a8:	2008      	movs	r0, #8
200003aa:	f7ff ff3c 	bl	20000226 <delay_micro>
	ascii_write_cmd(0x04); //Rätt? Increment? 00000100
200003ae:	2004      	movs	r0, #4
200003b0:	f7ff feb8 	bl	20000124 <ascii_write_cmd>
	delay_micro(39);
200003b4:	2027      	movs	r0, #39	; 0x27
200003b6:	f7ff ff36 	bl	20000226 <delay_micro>
}
200003ba:	46c0      	nop			; (mov r8, r8)
200003bc:	46bd      	mov	sp, r7
200003be:	bd80      	pop	{r7, pc}

200003c0 <main>:

int main(int argc, char **argv)
{
200003c0:	b5b0      	push	{r4, r5, r7, lr}
200003c2:	b08c      	sub	sp, #48	; 0x30
200003c4:	af00      	add	r7, sp, #0
200003c6:	6078      	str	r0, [r7, #4]
200003c8:	6039      	str	r1, [r7, #0]
	
	//ascii_ctrl_bit_set(0x01)
	char *s;
	char test1[] = "If you can dream it";
200003ca:	2418      	movs	r4, #24
200003cc:	193b      	adds	r3, r7, r4
200003ce:	4a1e      	ldr	r2, [pc, #120]	; (20000448 <main+0x88>)
200003d0:	ca23      	ldmia	r2!, {r0, r1, r5}
200003d2:	c323      	stmia	r3!, {r0, r1, r5}
200003d4:	ca03      	ldmia	r2!, {r0, r1}
200003d6:	c303      	stmia	r3!, {r0, r1}
	char test2[] = "You can do it!";
200003d8:	2308      	movs	r3, #8
200003da:	18fb      	adds	r3, r7, r3
200003dc:	4a1b      	ldr	r2, [pc, #108]	; (2000044c <main+0x8c>)
200003de:	ca23      	ldmia	r2!, {r0, r1, r5}
200003e0:	c323      	stmia	r3!, {r0, r1, r5}
200003e2:	8811      	ldrh	r1, [r2, #0]
200003e4:	8019      	strh	r1, [r3, #0]
200003e6:	7892      	ldrb	r2, [r2, #2]
200003e8:	709a      	strb	r2, [r3, #2]
	
	init_app();
200003ea:	f7ff fe11 	bl	20000010 <init_app>
	ascii_init();
200003ee:	f7ff ff9a 	bl	20000326 <ascii_init>
	ascii_gotoxy(1,1);
200003f2:	2101      	movs	r1, #1
200003f4:	2001      	movs	r0, #1
200003f6:	f7ff ff7b 	bl	200002f0 <ascii_gotoxy>
	s = test1;
200003fa:	193b      	adds	r3, r7, r4
200003fc:	62fb      	str	r3, [r7, #44]	; 0x2c
	while(*s)
200003fe:	e006      	b.n	2000040e <main+0x4e>
	{
		ascii_write_char(*s++);
20000400:	6afb      	ldr	r3, [r7, #44]	; 0x2c
20000402:	1c5a      	adds	r2, r3, #1
20000404:	62fa      	str	r2, [r7, #44]	; 0x2c
20000406:	781b      	ldrb	r3, [r3, #0]
20000408:	0018      	movs	r0, r3
2000040a:	f7ff ff53 	bl	200002b4 <ascii_write_char>
	while(*s)
2000040e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
20000410:	781b      	ldrb	r3, [r3, #0]
20000412:	2b00      	cmp	r3, #0
20000414:	d1f4      	bne.n	20000400 <main+0x40>
	}
	ascii_gotoxy(1,2);
20000416:	2102      	movs	r1, #2
20000418:	2001      	movs	r0, #1
2000041a:	f7ff ff69 	bl	200002f0 <ascii_gotoxy>
	s = test2;
2000041e:	2308      	movs	r3, #8
20000420:	18fb      	adds	r3, r7, r3
20000422:	62fb      	str	r3, [r7, #44]	; 0x2c
	while(*s)
20000424:	e006      	b.n	20000434 <main+0x74>
	{
		ascii_write_char(*s++);
20000426:	6afb      	ldr	r3, [r7, #44]	; 0x2c
20000428:	1c5a      	adds	r2, r3, #1
2000042a:	62fa      	str	r2, [r7, #44]	; 0x2c
2000042c:	781b      	ldrb	r3, [r3, #0]
2000042e:	0018      	movs	r0, r3
20000430:	f7ff ff40 	bl	200002b4 <ascii_write_char>
	while(*s)
20000434:	6afb      	ldr	r3, [r7, #44]	; 0x2c
20000436:	781b      	ldrb	r3, [r3, #0]
20000438:	2b00      	cmp	r3, #0
2000043a:	d1f4      	bne.n	20000426 <main+0x66>
	}
	return 0;
2000043c:	2300      	movs	r3, #0
	
}
2000043e:	0018      	movs	r0, r3
20000440:	46bd      	mov	sp, r7
20000442:	b00c      	add	sp, #48	; 0x30
20000444:	bdb0      	pop	{r4, r5, r7, pc}
20000446:	46c0      	nop			; (mov r8, r8)
20000448:	20000628 	andcs	r0, r0, r8, lsr #12
2000044c:	2000063c 	andcs	r0, r0, ip, lsr r6

20000450 <__divsi3>:
20000450:	4603      	mov	r3, r0
20000452:	430b      	orrs	r3, r1
20000454:	d47f      	bmi.n	20000556 <__divsi3+0x106>
20000456:	2200      	movs	r2, #0
20000458:	0843      	lsrs	r3, r0, #1
2000045a:	428b      	cmp	r3, r1
2000045c:	d374      	bcc.n	20000548 <__divsi3+0xf8>
2000045e:	0903      	lsrs	r3, r0, #4
20000460:	428b      	cmp	r3, r1
20000462:	d35f      	bcc.n	20000524 <__divsi3+0xd4>
20000464:	0a03      	lsrs	r3, r0, #8
20000466:	428b      	cmp	r3, r1
20000468:	d344      	bcc.n	200004f4 <__divsi3+0xa4>
2000046a:	0b03      	lsrs	r3, r0, #12
2000046c:	428b      	cmp	r3, r1
2000046e:	d328      	bcc.n	200004c2 <__divsi3+0x72>
20000470:	0c03      	lsrs	r3, r0, #16
20000472:	428b      	cmp	r3, r1
20000474:	d30d      	bcc.n	20000492 <__divsi3+0x42>
20000476:	22ff      	movs	r2, #255	; 0xff
20000478:	0209      	lsls	r1, r1, #8
2000047a:	ba12      	rev	r2, r2
2000047c:	0c03      	lsrs	r3, r0, #16
2000047e:	428b      	cmp	r3, r1
20000480:	d302      	bcc.n	20000488 <__divsi3+0x38>
20000482:	1212      	asrs	r2, r2, #8
20000484:	0209      	lsls	r1, r1, #8
20000486:	d065      	beq.n	20000554 <__divsi3+0x104>
20000488:	0b03      	lsrs	r3, r0, #12
2000048a:	428b      	cmp	r3, r1
2000048c:	d319      	bcc.n	200004c2 <__divsi3+0x72>
2000048e:	e000      	b.n	20000492 <__divsi3+0x42>
20000490:	0a09      	lsrs	r1, r1, #8
20000492:	0bc3      	lsrs	r3, r0, #15
20000494:	428b      	cmp	r3, r1
20000496:	d301      	bcc.n	2000049c <__divsi3+0x4c>
20000498:	03cb      	lsls	r3, r1, #15
2000049a:	1ac0      	subs	r0, r0, r3
2000049c:	4152      	adcs	r2, r2
2000049e:	0b83      	lsrs	r3, r0, #14
200004a0:	428b      	cmp	r3, r1
200004a2:	d301      	bcc.n	200004a8 <__divsi3+0x58>
200004a4:	038b      	lsls	r3, r1, #14
200004a6:	1ac0      	subs	r0, r0, r3
200004a8:	4152      	adcs	r2, r2
200004aa:	0b43      	lsrs	r3, r0, #13
200004ac:	428b      	cmp	r3, r1
200004ae:	d301      	bcc.n	200004b4 <__divsi3+0x64>
200004b0:	034b      	lsls	r3, r1, #13
200004b2:	1ac0      	subs	r0, r0, r3
200004b4:	4152      	adcs	r2, r2
200004b6:	0b03      	lsrs	r3, r0, #12
200004b8:	428b      	cmp	r3, r1
200004ba:	d301      	bcc.n	200004c0 <__divsi3+0x70>
200004bc:	030b      	lsls	r3, r1, #12
200004be:	1ac0      	subs	r0, r0, r3
200004c0:	4152      	adcs	r2, r2
200004c2:	0ac3      	lsrs	r3, r0, #11
200004c4:	428b      	cmp	r3, r1
200004c6:	d301      	bcc.n	200004cc <__divsi3+0x7c>
200004c8:	02cb      	lsls	r3, r1, #11
200004ca:	1ac0      	subs	r0, r0, r3
200004cc:	4152      	adcs	r2, r2
200004ce:	0a83      	lsrs	r3, r0, #10
200004d0:	428b      	cmp	r3, r1
200004d2:	d301      	bcc.n	200004d8 <__divsi3+0x88>
200004d4:	028b      	lsls	r3, r1, #10
200004d6:	1ac0      	subs	r0, r0, r3
200004d8:	4152      	adcs	r2, r2
200004da:	0a43      	lsrs	r3, r0, #9
200004dc:	428b      	cmp	r3, r1
200004de:	d301      	bcc.n	200004e4 <__divsi3+0x94>
200004e0:	024b      	lsls	r3, r1, #9
200004e2:	1ac0      	subs	r0, r0, r3
200004e4:	4152      	adcs	r2, r2
200004e6:	0a03      	lsrs	r3, r0, #8
200004e8:	428b      	cmp	r3, r1
200004ea:	d301      	bcc.n	200004f0 <__divsi3+0xa0>
200004ec:	020b      	lsls	r3, r1, #8
200004ee:	1ac0      	subs	r0, r0, r3
200004f0:	4152      	adcs	r2, r2
200004f2:	d2cd      	bcs.n	20000490 <__divsi3+0x40>
200004f4:	09c3      	lsrs	r3, r0, #7
200004f6:	428b      	cmp	r3, r1
200004f8:	d301      	bcc.n	200004fe <__divsi3+0xae>
200004fa:	01cb      	lsls	r3, r1, #7
200004fc:	1ac0      	subs	r0, r0, r3
200004fe:	4152      	adcs	r2, r2
20000500:	0983      	lsrs	r3, r0, #6
20000502:	428b      	cmp	r3, r1
20000504:	d301      	bcc.n	2000050a <__divsi3+0xba>
20000506:	018b      	lsls	r3, r1, #6
20000508:	1ac0      	subs	r0, r0, r3
2000050a:	4152      	adcs	r2, r2
2000050c:	0943      	lsrs	r3, r0, #5
2000050e:	428b      	cmp	r3, r1
20000510:	d301      	bcc.n	20000516 <__divsi3+0xc6>
20000512:	014b      	lsls	r3, r1, #5
20000514:	1ac0      	subs	r0, r0, r3
20000516:	4152      	adcs	r2, r2
20000518:	0903      	lsrs	r3, r0, #4
2000051a:	428b      	cmp	r3, r1
2000051c:	d301      	bcc.n	20000522 <__divsi3+0xd2>
2000051e:	010b      	lsls	r3, r1, #4
20000520:	1ac0      	subs	r0, r0, r3
20000522:	4152      	adcs	r2, r2
20000524:	08c3      	lsrs	r3, r0, #3
20000526:	428b      	cmp	r3, r1
20000528:	d301      	bcc.n	2000052e <__divsi3+0xde>
2000052a:	00cb      	lsls	r3, r1, #3
2000052c:	1ac0      	subs	r0, r0, r3
2000052e:	4152      	adcs	r2, r2
20000530:	0883      	lsrs	r3, r0, #2
20000532:	428b      	cmp	r3, r1
20000534:	d301      	bcc.n	2000053a <__divsi3+0xea>
20000536:	008b      	lsls	r3, r1, #2
20000538:	1ac0      	subs	r0, r0, r3
2000053a:	4152      	adcs	r2, r2
2000053c:	0843      	lsrs	r3, r0, #1
2000053e:	428b      	cmp	r3, r1
20000540:	d301      	bcc.n	20000546 <__divsi3+0xf6>
20000542:	004b      	lsls	r3, r1, #1
20000544:	1ac0      	subs	r0, r0, r3
20000546:	4152      	adcs	r2, r2
20000548:	1a41      	subs	r1, r0, r1
2000054a:	d200      	bcs.n	2000054e <__divsi3+0xfe>
2000054c:	4601      	mov	r1, r0
2000054e:	4152      	adcs	r2, r2
20000550:	4610      	mov	r0, r2
20000552:	4770      	bx	lr
20000554:	e05d      	b.n	20000612 <__divsi3+0x1c2>
20000556:	0fca      	lsrs	r2, r1, #31
20000558:	d000      	beq.n	2000055c <__divsi3+0x10c>
2000055a:	4249      	negs	r1, r1
2000055c:	1003      	asrs	r3, r0, #32
2000055e:	d300      	bcc.n	20000562 <__divsi3+0x112>
20000560:	4240      	negs	r0, r0
20000562:	4053      	eors	r3, r2
20000564:	2200      	movs	r2, #0
20000566:	469c      	mov	ip, r3
20000568:	0903      	lsrs	r3, r0, #4
2000056a:	428b      	cmp	r3, r1
2000056c:	d32d      	bcc.n	200005ca <__divsi3+0x17a>
2000056e:	0a03      	lsrs	r3, r0, #8
20000570:	428b      	cmp	r3, r1
20000572:	d312      	bcc.n	2000059a <__divsi3+0x14a>
20000574:	22fc      	movs	r2, #252	; 0xfc
20000576:	0189      	lsls	r1, r1, #6
20000578:	ba12      	rev	r2, r2
2000057a:	0a03      	lsrs	r3, r0, #8
2000057c:	428b      	cmp	r3, r1
2000057e:	d30c      	bcc.n	2000059a <__divsi3+0x14a>
20000580:	0189      	lsls	r1, r1, #6
20000582:	1192      	asrs	r2, r2, #6
20000584:	428b      	cmp	r3, r1
20000586:	d308      	bcc.n	2000059a <__divsi3+0x14a>
20000588:	0189      	lsls	r1, r1, #6
2000058a:	1192      	asrs	r2, r2, #6
2000058c:	428b      	cmp	r3, r1
2000058e:	d304      	bcc.n	2000059a <__divsi3+0x14a>
20000590:	0189      	lsls	r1, r1, #6
20000592:	d03a      	beq.n	2000060a <__divsi3+0x1ba>
20000594:	1192      	asrs	r2, r2, #6
20000596:	e000      	b.n	2000059a <__divsi3+0x14a>
20000598:	0989      	lsrs	r1, r1, #6
2000059a:	09c3      	lsrs	r3, r0, #7
2000059c:	428b      	cmp	r3, r1
2000059e:	d301      	bcc.n	200005a4 <__divsi3+0x154>
200005a0:	01cb      	lsls	r3, r1, #7
200005a2:	1ac0      	subs	r0, r0, r3
200005a4:	4152      	adcs	r2, r2
200005a6:	0983      	lsrs	r3, r0, #6
200005a8:	428b      	cmp	r3, r1
200005aa:	d301      	bcc.n	200005b0 <__divsi3+0x160>
200005ac:	018b      	lsls	r3, r1, #6
200005ae:	1ac0      	subs	r0, r0, r3
200005b0:	4152      	adcs	r2, r2
200005b2:	0943      	lsrs	r3, r0, #5
200005b4:	428b      	cmp	r3, r1
200005b6:	d301      	bcc.n	200005bc <__divsi3+0x16c>
200005b8:	014b      	lsls	r3, r1, #5
200005ba:	1ac0      	subs	r0, r0, r3
200005bc:	4152      	adcs	r2, r2
200005be:	0903      	lsrs	r3, r0, #4
200005c0:	428b      	cmp	r3, r1
200005c2:	d301      	bcc.n	200005c8 <__divsi3+0x178>
200005c4:	010b      	lsls	r3, r1, #4
200005c6:	1ac0      	subs	r0, r0, r3
200005c8:	4152      	adcs	r2, r2
200005ca:	08c3      	lsrs	r3, r0, #3
200005cc:	428b      	cmp	r3, r1
200005ce:	d301      	bcc.n	200005d4 <__divsi3+0x184>
200005d0:	00cb      	lsls	r3, r1, #3
200005d2:	1ac0      	subs	r0, r0, r3
200005d4:	4152      	adcs	r2, r2
200005d6:	0883      	lsrs	r3, r0, #2
200005d8:	428b      	cmp	r3, r1
200005da:	d301      	bcc.n	200005e0 <__divsi3+0x190>
200005dc:	008b      	lsls	r3, r1, #2
200005de:	1ac0      	subs	r0, r0, r3
200005e0:	4152      	adcs	r2, r2
200005e2:	d2d9      	bcs.n	20000598 <__divsi3+0x148>
200005e4:	0843      	lsrs	r3, r0, #1
200005e6:	428b      	cmp	r3, r1
200005e8:	d301      	bcc.n	200005ee <__divsi3+0x19e>
200005ea:	004b      	lsls	r3, r1, #1
200005ec:	1ac0      	subs	r0, r0, r3
200005ee:	4152      	adcs	r2, r2
200005f0:	1a41      	subs	r1, r0, r1
200005f2:	d200      	bcs.n	200005f6 <__divsi3+0x1a6>
200005f4:	4601      	mov	r1, r0
200005f6:	4663      	mov	r3, ip
200005f8:	4152      	adcs	r2, r2
200005fa:	105b      	asrs	r3, r3, #1
200005fc:	4610      	mov	r0, r2
200005fe:	d301      	bcc.n	20000604 <__divsi3+0x1b4>
20000600:	4240      	negs	r0, r0
20000602:	2b00      	cmp	r3, #0
20000604:	d500      	bpl.n	20000608 <__divsi3+0x1b8>
20000606:	4249      	negs	r1, r1
20000608:	4770      	bx	lr
2000060a:	4663      	mov	r3, ip
2000060c:	105b      	asrs	r3, r3, #1
2000060e:	d300      	bcc.n	20000612 <__divsi3+0x1c2>
20000610:	4240      	negs	r0, r0
20000612:	b501      	push	{r0, lr}
20000614:	2000      	movs	r0, #0
20000616:	f000 f805 	bl	20000624 <__aeabi_idiv0>
2000061a:	bd02      	pop	{r1, pc}

2000061c <__aeabi_idivmod>:
2000061c:	2900      	cmp	r1, #0
2000061e:	d0f8      	beq.n	20000612 <__divsi3+0x1c2>
20000620:	e716      	b.n	20000450 <__divsi3>
20000622:	4770      	bx	lr

20000624 <__aeabi_idiv0>:
20000624:	4770      	bx	lr
20000626:	46c0      	nop			; (mov r8, r8)
20000628:	79206649 	stmdbvc	r0!, {r0, r3, r6, r9, sl, sp, lr}
2000062c:	6320756f 			; <UNDEFINED> instruction: 0x6320756f
20000630:	64206e61 	strtvs	r6, [r0], #-3681	; 0xfffff19f
20000634:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
20000638:	00746920 	rsbseq	r6, r4, r0, lsr #18
2000063c:	20756f59 	rsbscs	r6, r5, r9, asr pc
20000640:	206e6163 	rsbcs	r6, lr, r3, ror #2
20000644:	69206f64 	stmdbvs	r0!, {r2, r5, r6, r8, r9, sl, fp, sp, lr}
20000648:	00002174 	andeq	r2, r0, r4, ror r1

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	00000342 	andeq	r0, r0, r2, asr #6
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	0000000c 	andeq	r0, r0, ip
  10:	0001ac0c 	andeq	sl, r1, ip, lsl #24
  14:	0000c600 	andeq	ip, r0, r0, lsl #12
	...
  24:	019a0200 	orrseq	r0, sl, r0, lsl #4
  28:	bd010000 	stclt	0, cr0, [r1, #-0]
  2c:	00000083 	andeq	r0, r0, r3, lsl #1
  30:	200003c0 	andcs	r0, r0, r0, asr #7
  34:	00000090 	muleq	r0, r0, r0
  38:	00839c01 	addeq	r9, r3, r1, lsl #24
  3c:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
  40:	01000001 	tsteq	r0, r1
  44:	000083bd 			; <UNDEFINED> instruction: 0x000083bd
  48:	44910200 	ldrmi	r0, [r1], #512	; 0x200
  4c:	00023b03 	andeq	r3, r2, r3, lsl #22
  50:	8abd0100 	bhi	fef40458 <__aeabi_idiv0+0xdef3fe34>
  54:	02000000 	andeq	r0, r0, #0
  58:	73044091 	movwvc	r4, #16529	; 0x4091
  5c:	90c10100 	sbcls	r0, r1, r0, lsl #2
  60:	02000000 	andeq	r0, r0, #0
  64:	fa056c91 	blx	15b2b0 <startup-0x1fea4d50>
  68:	01000001 	tsteq	r0, r1
  6c:	00009dc2 	andeq	r9, r0, r2, asr #27
  70:	58910200 	ldmpl	r1, {r9}
  74:	00020005 	andeq	r0, r2, r5
  78:	b4c30100 	strblt	r0, [r3], #256	; 0x100
  7c:	02000000 	andeq	r0, r0, #0
  80:	06004891 			; <UNDEFINED> instruction: 0x06004891
  84:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
  88:	04070074 	streq	r0, [r7], #-116	; 0xffffff8c
  8c:	00000090 	muleq	r0, r0, r0
  90:	00960407 	addseq	r0, r6, r7, lsl #8
  94:	01080000 	mrseq	r0, (UNDEF: 8)
  98:	00019508 	andeq	r9, r1, r8, lsl #10
  9c:	00960900 	addseq	r0, r6, r0, lsl #18
  a0:	00ad0000 	adceq	r0, sp, r0
  a4:	ad0a0000 	stcge	0, cr0, [sl, #-0]
  a8:	13000000 	movwne	r0, #0
  ac:	07040800 	streq	r0, [r4, -r0, lsl #16]
  b0:	000000a4 	andeq	r0, r0, r4, lsr #1
  b4:	00009609 	andeq	r9, r0, r9, lsl #12
  b8:	0000c400 	andeq	ip, r0, r0, lsl #8
  bc:	00ad0a00 	adceq	r0, sp, r0, lsl #20
  c0:	000e0000 	andeq	r0, lr, r0
  c4:	0002400b 	andeq	r4, r2, fp
  c8:	26a60100 	strtcs	r0, [r6], r0, lsl #2
  cc:	9a200003 	bls	8000e0 <startup-0x1f7fff20>
  d0:	01000000 	mrseq	r0, (UNDEF: 0)
  d4:	019f0c9c 			; <UNDEFINED> instruction: 0x019f0c9c
  d8:	9b010000 	blls	400e0 <startup-0x1ffbff20>
  dc:	200002f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
  e0:	00000036 	andeq	r0, r0, r6, lsr r0
  e4:	01159c01 	tsteq	r5, r1, lsl #24
  e8:	720d0000 	andvc	r0, sp, #0
  ec:	0100776f 	tsteq	r0, pc, ror #14
  f0:	0000839b 	muleq	r0, fp, r3
  f4:	6c910200 	lfmvs	f0, 4, [r1], {0}
  f8:	6c6f630d 	stclvs	3, cr6, [pc], #-52	; cc <startup-0x1fffff34>
  fc:	839b0100 	orrshi	r0, fp, #0, 2
 100:	02000000 	andeq	r0, r0, #0
 104:	1e056891 	mcrne	8, 0, r6, cr5, cr1, {4}
 108:	01000002 	tsteq	r0, r2
 10c:	0000ad9d 	muleq	r0, sp, sp
 110:	74910200 	ldrvc	r0, [r1], #512	; 0x200
 114:	01300c00 	teqeq	r0, r0, lsl #24
 118:	93010000 	movwls	r0, #4096	; 0x1000
 11c:	200002b4 			; <UNDEFINED> instruction: 0x200002b4
 120:	0000003c 	andeq	r0, r0, ip, lsr r0
 124:	01379c01 	teqeq	r7, r1, lsl #24
 128:	630d0000 	movwvs	r0, #53248	; 0xd000
 12c:	37930100 	ldrcc	r0, [r3, r0, lsl #2]
 130:	02000001 	andeq	r0, r0, #1
 134:	08007791 	stmdaeq	r0, {r0, r4, r7, r8, r9, sl, ip, sp, lr}
 138:	018c0801 	orreq	r0, ip, r1, lsl #16
 13c:	640e0000 	strvs	r0, [lr], #-0
 140:	01000001 	tsteq	r0, r1
 144:	00026287 	andeq	r6, r2, r7, lsl #5
 148:	00005220 	andeq	r5, r0, r0, lsr #4
 14c:	629c0100 	addsvs	r0, ip, #0, 2
 150:	05000001 	streq	r0, [r0, #-1]
 154:	000000f8 	strdeq	r0, [r0], -r8
 158:	00ad8d01 	adceq	r8, sp, r1, lsl #26
 15c:	91020000 	mrsls	r0, (UNDEF: 2)
 160:	700c0074 	andvc	r0, ip, r4, ror r0
 164:	01000001 	tsteq	r0, r1
 168:	0002267a 	andeq	r2, r2, sl, ror r6
 16c:	00003c20 	andeq	r3, r0, r0, lsr #24
 170:	9c9c0100 	ldflss	f0, [ip], {0}
 174:	0d000001 	stceq	0, cr0, [r0, #-4]
 178:	01007375 	tsteq	r0, r5, ror r3
 17c:	0000837a 	andeq	r8, r0, sl, ror r3
 180:	74910200 	ldrvc	r0, [r1], #512	; 0x200
 184:	00023e0f 	andeq	r3, r2, pc, lsl #28
 188:	00001620 	andeq	r1, r0, r0, lsr #12
 18c:	01641000 	cmneq	r4, r0
 190:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
 194:	00000083 	andeq	r0, r0, r3, lsl #1
 198:	00000011 	andeq	r0, r0, r1, lsl r0
 19c:	0000000c 	andeq	r0, r0, ip
 1a0:	10750100 	rsbsne	r0, r5, r0, lsl #2
 1a4:	16200002 	strtne	r0, [r0], -r2
 1a8:	01000000 	mrseq	r0, (UNDEF: 0)
 1ac:	0001cc9c 	muleq	r1, ip, ip
 1b0:	736d0d00 	cmnvc	sp, #0, 26
 1b4:	83750100 	cmnhi	r5, #0, 2
 1b8:	02000000 	andeq	r0, r0, #0
 1bc:	70107491 	mulsvc	r0, r1, r4
 1c0:	01000001 	tsteq	r0, r1
 1c4:	00008377 	andeq	r8, r0, r7, ror r3
 1c8:	00001100 	andeq	r1, r0, r0, lsl #2
 1cc:	00017c02 	andeq	r7, r1, r2, lsl #24
 1d0:	376a0100 	strbcc	r0, [sl, -r0, lsl #2]!
 1d4:	c4000001 	strgt	r0, [r0], #-1
 1d8:	4c200001 	stcmi	0, cr0, [r0], #-4
 1dc:	01000000 	mrseq	r0, (UNDEF: 0)
 1e0:	0001f39c 	muleq	r1, ip, r3
 1e4:	76720400 	ldrbtvc	r0, [r2], -r0, lsl #8
 1e8:	376c0100 	strbcc	r0, [ip, -r0, lsl #2]!
 1ec:	02000001 	andeq	r0, r0, #1
 1f0:	02006f91 	andeq	r6, r0, #580	; 0x244
 1f4:	00000141 	andeq	r0, r0, r1, asr #2
 1f8:	01375f01 	teqeq	r7, r1, lsl #30
 1fc:	01780000 	cmneq	r8, r0
 200:	004c2000 	subeq	r2, ip, r0
 204:	9c010000 	stcls	0, cr0, [r1], {-0}
 208:	0000021a 	andeq	r0, r0, sl, lsl r2
 20c:	00767204 	rsbseq	r7, r6, r4, lsl #4
 210:	01376101 	teqeq	r7, r1, lsl #2
 214:	91020000 	mrsls	r0, (UNDEF: 2)
 218:	530c006f 	movwpl	r0, #49263	; 0xc06f
 21c:	01000001 	tsteq	r0, r1
 220:	00014e56 	andeq	r4, r1, r6, asr lr
 224:	00002a20 	andeq	r2, r0, r0, lsr #20
 228:	3e9c0100 	fmlcce	f0, f4, f0
 22c:	03000002 	movweq	r0, #2
 230:	00000187 	andeq	r0, r0, r7, lsl #3
 234:	01375601 	teqeq	r7, r1, lsl #12
 238:	91020000 	mrsls	r0, (UNDEF: 2)
 23c:	060c0077 			; <UNDEFINED> instruction: 0x060c0077
 240:	01000002 	tsteq	r0, r2
 244:	0001244e 	andeq	r2, r1, lr, asr #8
 248:	00002a20 	andeq	r2, r0, r0, lsr #20
 24c:	629c0100 	addsvs	r0, ip, #0, 2
 250:	03000002 	movweq	r0, #2
 254:	000001e8 	andeq	r0, r0, r8, ror #3
 258:	01374e01 	teqeq	r7, r1, lsl #28
 25c:	91020000 	mrsls	r0, (UNDEF: 2)
 260:	25020077 	strcs	r0, [r2, #-119]	; 0xffffff89
 264:	01000002 	tsteq	r0, r2
 268:	00013742 	andeq	r3, r1, r2, asr #14
 26c:	0000f000 	andeq	pc, r0, r0
 270:	00003420 	andeq	r3, r0, r0, lsr #8
 274:	969c0100 	ldrls	r0, [ip], r0, lsl #2
 278:	04000002 	streq	r0, [r0], #-2
 27c:	01007672 	tsteq	r0, r2, ror r6
 280:	00013744 	andeq	r3, r1, r4, asr #14
 284:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 288:	00016410 	andeq	r6, r1, r0, lsl r4
 28c:	833e0100 	teqhi	lr, #0, 2
 290:	11000000 	mrsne	r0, (UNDEF: 0)
 294:	fd0c0000 	stc2	0, cr0, [ip, #-0]
 298:	01000000 	mrseq	r0, (UNDEF: 0)
 29c:	0000c03a 	andeq	ip, r0, sl, lsr r0
 2a0:	00003020 	andeq	r3, r0, r0, lsr #32
 2a4:	c79c0100 	ldrgt	r0, [ip, r0, lsl #2]
 2a8:	03000002 	movweq	r0, #2
 2ac:	000001f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 2b0:	01373a01 	teqeq	r7, r1, lsl #20
 2b4:	91020000 	mrsls	r0, (UNDEF: 2)
 2b8:	01641077 	smceq	16647	; 0x4107
 2bc:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
 2c0:	00000083 	andeq	r0, r0, r3, lsl #1
 2c4:	0e000011 	mcreq	0, 0, r0, cr0, cr1, {0}
 2c8:	000000b1 	strheq	r0, [r0], -r1
 2cc:	00783201 	rsbseq	r3, r8, r1, lsl #4
 2d0:	00482000 	subeq	r2, r8, r0
 2d4:	9c010000 	stcls	0, cr0, [r1], {-0}
 2d8:	000002f5 	strdeq	r0, [r0], -r5
 2dc:	0100780d 	tsteq	r0, sp, lsl #16
 2e0:	00013732 	andeq	r3, r1, r2, lsr r7
 2e4:	6f910200 	svcvs	0x00910200
 2e8:	01006304 	tsteq	r0, r4, lsl #6
 2ec:	00013734 	andeq	r3, r1, r4, lsr r7
 2f0:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 2f4:	011d0e00 	tsteq	sp, r0, lsl #28
 2f8:	2a010000 	bcs	40300 <startup-0x1ffbfd00>
 2fc:	20000034 	andcs	r0, r0, r4, lsr r0
 300:	00000044 	andeq	r0, r0, r4, asr #32
 304:	03239c01 			; <UNDEFINED> instruction: 0x03239c01
 308:	780d0000 	stmdavc	sp, {}	; <UNPREDICTABLE>
 30c:	372a0100 	strcc	r0, [sl, -r0, lsl #2]!
 310:	02000001 	andeq	r0, r0, #1
 314:	63046f91 	movwvs	r6, #20369	; 0x4f91
 318:	372c0100 	strcc	r0, [ip, -r0, lsl #2]!
 31c:	02000001 	andeq	r0, r0, #1
 320:	12007791 	andne	r7, r0, #38010880	; 0x2440000
 324:	00000114 	andeq	r0, r0, r4, lsl r1
 328:	00102401 	andseq	r2, r0, r1, lsl #8
 32c:	00242000 	eoreq	r2, r4, r0
 330:	9c010000 	stcls	0, cr0, [r1], {-0}
 334:	00021612 	andeq	r1, r2, r2, lsl r6
 338:	001a0100 	andseq	r0, sl, r0, lsl #2
 33c:	0c200000 	stceq	0, cr0, [r0], #-0
 340:	01000000 	mrseq	r0, (UNDEF: 0)
 344:	Address 0x00000344 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  18:	0b3a0e03 	bleq	e8382c <startup-0x1f17c7d4>
  1c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
  20:	01111349 	tsteq	r1, r9, asr #6
  24:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  28:	01194296 			; <UNDEFINED> instruction: 0x01194296
  2c:	03000013 	movweq	r0, #19
  30:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
  34:	0b3b0b3a 	bleq	ec2d24 <startup-0x1f13d2dc>
  38:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  3c:	34040000 	strcc	r0, [r4], #-0
  40:	3a080300 	bcc	200c48 <startup-0x1fdff3b8>
  44:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  48:	00180213 	andseq	r0, r8, r3, lsl r2
  4c:	00340500 	eorseq	r0, r4, r0, lsl #10
  50:	0b3a0e03 	bleq	e83864 <startup-0x1f17c79c>
  54:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  58:	00001802 	andeq	r1, r0, r2, lsl #16
  5c:	0b002406 	bleq	907c <startup-0x1fff6f84>
  60:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  64:	07000008 	streq	r0, [r0, -r8]
  68:	0b0b000f 	bleq	2c00ac <startup-0x1fd3ff54>
  6c:	00001349 	andeq	r1, r0, r9, asr #6
  70:	0b002408 	bleq	9098 <startup-0x1fff6f68>
  74:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  78:	0900000e 	stmdbeq	r0, {r1, r2, r3}
  7c:	13490101 	movtne	r0, #37121	; 0x9101
  80:	00001301 	andeq	r1, r0, r1, lsl #6
  84:	4900210a 	stmdbmi	r0, {r1, r3, r8, sp}
  88:	000b2f13 	andeq	r2, fp, r3, lsl pc
  8c:	002e0b00 	eoreq	r0, lr, r0, lsl #22
  90:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  94:	0b3b0b3a 	bleq	ec2d84 <startup-0x1f13d27c>
  98:	01111927 	tsteq	r1, r7, lsr #18
  9c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  a0:	00194296 	mulseq	r9, r6, r2
  a4:	012e0c00 			; <UNDEFINED> instruction: 0x012e0c00
  a8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  ac:	0b3b0b3a 	bleq	ec2d9c <startup-0x1f13d264>
  b0:	01111927 	tsteq	r1, r7, lsr #18
  b4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  b8:	01194296 			; <UNDEFINED> instruction: 0x01194296
  bc:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
  c0:	08030005 	stmdaeq	r3, {r0, r2}
  c4:	0b3b0b3a 	bleq	ec2db4 <startup-0x1f13d24c>
  c8:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  cc:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
  d0:	03193f01 	tsteq	r9, #1, 30
  d4:	3b0b3a0e 	blcc	2ce914 <startup-0x1fd316ec>
  d8:	1119270b 	tstne	r9, fp, lsl #14
  dc:	40061201 	andmi	r1, r6, r1, lsl #4
  e0:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  e4:	00001301 	andeq	r1, r0, r1, lsl #6
  e8:	11010b0f 	tstne	r1, pc, lsl #22
  ec:	00061201 	andeq	r1, r6, r1, lsl #4
  f0:	012e1000 			; <UNDEFINED> instruction: 0x012e1000
  f4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  f8:	0b3b0b3a 	bleq	ec2de8 <startup-0x1f13d218>
  fc:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
 100:	18110000 	ldmdane	r1, {}	; <UNPREDICTABLE>
 104:	12000000 	andne	r0, r0, #0
 108:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 10c:	0b3a0e03 	bleq	e83920 <startup-0x1f17c6e0>
 110:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 114:	06120111 			; <UNDEFINED> instruction: 0x06120111
 118:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 11c:	00000019 	andeq	r0, r0, r9, lsl r0

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000440 	andeq	r0, r0, r0, asr #8
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20000450 	andcs	r0, r0, r0, asr r4
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	0000011e 	andeq	r0, r0, lr, lsl r1
   4:	00520002 	subseq	r0, r2, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	6972614d 	ldmdbvs	r2!, {r0, r2, r3, r6, r8, sp, lr}^
  28:	6f442f61 	svcvs	0x00442f61
  2c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
  30:	2f73746e 	svccs	0x0073746e
  34:	4d2f5449 	cfstrsmi	mvf5, [pc, #-292]!	; ffffff18 <__aeabi_idiv0+0xdffff8f4>
  38:	4d2f504f 	stcmi	0, cr5, [pc, #-316]!	; ffffff04 <__aeabi_idiv0+0xdffff8e0>
  3c:	612f504f 			; <UNDEFINED> instruction: 0x612f504f
  40:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
  44:	7369645f 	cmnvc	r9, #1593835520	; 0x5f000000
  48:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
  4c:	74730000 	ldrbtvc	r0, [r3], #-0
  50:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  54:	00632e70 	rsbeq	r2, r3, r0, ror lr
  58:	00000001 	andeq	r0, r0, r1
  5c:	00020500 	andeq	r0, r2, r0, lsl #10
  60:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
  64:	5e13011a 	mrcpl	1, 0, r0, cr3, cr10, {0}
  68:	01000302 	tsteq	r0, r2, lsl #6
  6c:	02050001 	andeq	r0, r5, #1
  70:	20000010 	andcs	r0, r0, r0, lsl r0
  74:	2f012403 	svccs	0x00012403
  78:	68a13d3d 	stmiavs	r1!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
  7c:	7759ad59 			; <UNDEFINED> instruction: 0x7759ad59
  80:	4be55968 	blmi	ff956628 <__aeabi_idiv0+0xdf956004>
  84:	4b3d6769 	blmi	f59e30 <startup-0x1f0a61d0>
  88:	3e693d2f 	cdpcc	13, 6, cr3, cr9, cr15, {1}
  8c:	4b2f2f3d 	blmi	bcbd88 <startup-0x1f434278>
  90:	6777303d 			; <UNDEFINED> instruction: 0x6777303d
  94:	4d5a3d3d 	ldclmi	13, cr3, [sl, #-244]	; 0xffffff0c
  98:	593d3d67 	ldmdbpl	sp!, {r0, r1, r2, r5, r6, r8, sl, fp, ip, sp}
  9c:	3d673e4f 	stclcc	14, cr3, [r7, #-316]!	; 0xfffffec4
  a0:	2f67593d 	svccs	0x0067593d
  a4:	3d673ea1 	stclcc	14, cr3, [r7, #-644]!	; 0xfffffd7c
  a8:	2f67593d 	svccs	0x0067593d
  ac:	4d3d4ba1 	fldmdbxmi	sp!, {d4-d83}	;@ Deprecated
  b0:	2f22754b 	svccs	0x0022754b
  b4:	032f2f2f 			; <UNDEFINED> instruction: 0x032f2f2f
  b8:	4d443c7a 	stclmi	12, cr3, [r4, #-488]	; 0xfffffe18
  bc:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
  c0:	0200673d 	andeq	r6, r0, #15990784	; 0xf40000
  c4:	20060104 	andcs	r0, r6, r4, lsl #2
  c8:	a13e6706 	teqge	lr, r6, lsl #14
  cc:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
  d0:	06200601 	strteq	r0, [r0], -r1, lsl #12
  d4:	3d593d83 	ldclcc	13, cr3, [r9, #-524]	; 0xfffffdf4
  d8:	3e3d5a4d 	vsubcc.f32	s10, s26, s26
  dc:	2f4d913e 	svccs	0x004d913e
  e0:	01040200 	mrseq	r0, R12_usr
  e4:	83062006 	movwhi	r2, #24582	; 0x6006
  e8:	003e3d3d 	eorseq	r3, lr, sp, lsr sp
  ec:	06010402 	streq	r0, [r1], -r2, lsl #8
  f0:	3d830620 	stccc	6, cr0, [r3, #128]	; 0x80
  f4:	02003e3d 	andeq	r3, r0, #976	; 0x3d0
  f8:	20060104 	andcs	r0, r6, r4, lsl #2
  fc:	3d3d8306 	ldccc	3, cr8, [sp, #-24]!	; 0xffffffe8
 100:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
 104:	06200601 	strteq	r0, [r0], -r1, lsl #12
 108:	3d3d3d83 	ldccc	13, cr3, [sp, #-524]!	; 0xfffffdf4
 10c:	92755c3f 	rsbsls	r5, r5, #16128	; 0x3f00
 110:	2f4b2f2f 	svccs	0x004b2f2f
 114:	4b4e7222 	blmi	139c9a4 <startup-0x1ec6365c>
 118:	4e72223d 	mrcmi	2, 3, r2, cr2, cr13, {1}
 11c:	00090222 	andeq	r0, r9, r2, lsr #4
 120:	Address 0x00000120 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	616c6564 	cmnvs	ip, r4, ror #10
   4:	696d5f79 	stmdbvs	sp!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
   8:	00696c6c 	rsbeq	r6, r9, ip, ror #24
   c:	20554e47 	subscs	r4, r5, r7, asr #28
  10:	20393943 	eorscs	r3, r9, r3, asr #18
  14:	2e322e37 	mrccs	14, 1, r2, cr2, cr7, {1}
  18:	30322031 	eorscc	r2, r2, r1, lsr r0
  1c:	39303731 	ldmdbcc	r0!, {r0, r4, r5, r8, r9, sl, ip, sp}
  20:	28203430 	stmdacs	r0!, {r4, r5, sl, ip, sp}
  24:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  28:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  2c:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  30:	6d652f4d 	stclvs	15, cr2, [r5, #-308]!	; 0xfffffecc
  34:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
  38:	372d6465 	strcc	r6, [sp, -r5, ror #8]!
  3c:	6172622d 	cmnvs	r2, sp, lsr #4
  40:	2068636e 	rsbcs	r6, r8, lr, ror #6
  44:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  48:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  4c:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
  50:	5d343032 	ldcpl	0, cr3, [r4, #-200]!	; 0xffffff38
  54:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
  58:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
  5c:	616d2d20 	cmnvs	sp, r0, lsr #26
  60:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  64:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  68:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  6c:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  70:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  74:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  78:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  7c:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
  80:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
  84:	616d2d20 	cmnvs	sp, r0, lsr #26
  88:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  8c:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  90:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  94:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
  98:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
  9c:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
  a0:	00393963 	eorseq	r3, r9, r3, ror #18
  a4:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  a8:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  ac:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
  b0:	63736100 	cmnvs	r3, #0, 2
  b4:	635f6969 	cmpvs	pc, #1720320	; 0x1a4000
  b8:	5f6c7274 	svcpl	0x006c7274
  bc:	5f746962 	svcpl	0x00746962
  c0:	61656c63 	cmnvs	r5, r3, ror #24
  c4:	3a430072 	bcc	10c0294 <startup-0x1ef3fd6c>
  c8:	6573555c 	ldrbvs	r5, [r3, #-1372]!	; 0xfffffaa4
  cc:	4d5c7372 	ldclmi	3, cr7, [ip, #-456]	; 0xfffffe38
  d0:	61697261 	cmnvs	r9, r1, ror #4
  d4:	636f445c 	cmnvs	pc, #92, 8	; 0x5c000000
  d8:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
  dc:	495c7374 	ldmdbmi	ip, {r2, r4, r5, r6, r8, r9, ip, sp, lr}^
  e0:	4f4d5c54 	svcmi	0x004d5c54
  e4:	4f4d5c50 	svcmi	0x004d5c50
  e8:	73615c50 	cmnvc	r1, #80, 24	; 0x5000
  ec:	5f696963 	svcpl	0x00696963
  f0:	70736964 	rsbsvc	r6, r3, r4, ror #18
  f4:	0079616c 	rsbseq	r6, r9, ip, ror #2
  f8:	6c727463 	cfldrdvs	mvd7, [r2], #-396	; 0xfffffe74
  fc:	63736100 	cmnvs	r3, #0, 2
 100:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
 104:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 108:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
 10c:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; ffffff44 <__aeabi_idiv0+0xdffff920>
 110:	0072656c 	rsbseq	r6, r2, ip, ror #10
 114:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 118:	7070615f 	rsbsvc	r6, r0, pc, asr r1
 11c:	63736100 	cmnvs	r3, #0, 2
 120:	635f6969 	cmpvs	pc, #1720320	; 0x1a4000
 124:	5f6c7274 	svcpl	0x006c7274
 128:	5f746962 	svcpl	0x00746962
 12c:	00746573 	rsbseq	r6, r4, r3, ror r5
 130:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 134:	72775f69 	rsbsvc	r5, r7, #420	; 0x1a4
 138:	5f657469 	svcpl	0x00657469
 13c:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
 140:	63736100 	cmnvs	r3, #0, 2
 144:	725f6969 	subsvc	r6, pc, #1720320	; 0x1a4000
 148:	5f646165 	svcpl	0x00646165
 14c:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
 150:	61007375 	tstvs	r0, r5, ror r3
 154:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 158:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
 15c:	645f6574 	ldrbvs	r6, [pc], #-1396	; 164 <startup-0x1ffffe9c>
 160:	00617461 	rsbeq	r7, r1, r1, ror #8
 164:	616c6564 	cmnvs	ip, r4, ror #10
 168:	35325f79 	ldrcc	r5, [r2, #-3961]!	; 0xfffff087
 16c:	00736e30 	rsbseq	r6, r3, r0, lsr lr
 170:	616c6564 	cmnvs	ip, r4, ror #10
 174:	696d5f79 	stmdbvs	sp!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 178:	006f7263 	rsbeq	r7, pc, r3, ror #4
 17c:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 180:	65725f69 	ldrbvs	r5, [r2, #-3945]!	; 0xfffff097
 184:	645f6461 	ldrbvs	r6, [pc], #-1121	; 18c <startup-0x1ffffe74>
 188:	00617461 	rsbeq	r7, r1, r1, ror #8
 18c:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 190:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
 194:	61686320 	cmnvs	r8, r0, lsr #6
 198:	616d0072 	smcvs	53250	; 0xd002
 19c:	61006e69 	tstvs	r0, r9, ror #28
 1a0:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 1a4:	746f675f 	strbtvc	r6, [pc], #-1887	; 1ac <startup-0x1ffffe54>
 1a8:	0079786f 	rsbseq	r7, r9, pc, ror #16
 1ac:	552f3a43 	strpl	r3, [pc, #-2627]!	; fffff771 <__aeabi_idiv0+0xdffff14d>
 1b0:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
 1b4:	72614d2f 	rsbvc	r4, r1, #3008	; 0xbc0
 1b8:	442f6169 	strtmi	r6, [pc], #-361	; 1c0 <startup-0x1ffffe40>
 1bc:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 1c0:	73746e65 	cmnvc	r4, #1616	; 0x650
 1c4:	2f54492f 	svccs	0x0054492f
 1c8:	2f504f4d 	svccs	0x00504f4d
 1cc:	2f504f4d 	svccs	0x00504f4d
 1d0:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 1d4:	69645f69 	stmdbvs	r4!, {r0, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 1d8:	616c7073 	smcvs	50947	; 0xc703
 1dc:	74732f79 	ldrbtvc	r2, [r3], #-3961	; 0xfffff087
 1e0:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
 1e4:	00632e70 	rsbeq	r2, r3, r0, ror lr
 1e8:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
 1ec:	00646e61 	rsbeq	r6, r4, r1, ror #28
 1f0:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
 1f4:	67726100 	ldrbvs	r6, [r2, -r0, lsl #2]!
 1f8:	65740063 	ldrbvs	r0, [r4, #-99]!	; 0xffffff9d
 1fc:	00317473 	eorseq	r7, r1, r3, ror r4
 200:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 204:	73610032 	cmnvc	r1, #50	; 0x32
 208:	5f696963 	svcpl	0x00696963
 20c:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 210:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
 214:	74730064 	ldrbtvc	r0, [r3], #-100	; 0xffffff9c
 218:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
 21c:	64610070 	strbtvs	r0, [r1], #-112	; 0xffffff90
 220:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
 224:	63736100 	cmnvs	r3, #0, 2
 228:	725f6969 	subsvc	r6, pc, #1720320	; 0x1a4000
 22c:	5f646165 	svcpl	0x00646165
 230:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
 234:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
 238:	61007265 	tstvs	r0, r5, ror #4
 23c:	00766772 	rsbseq	r6, r6, r2, ror r7
 240:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 244:	6e695f69 	cdpvs	15, 6, cr5, cr9, cr9, {3}
 248:	Address 0x00000248 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d37 	eorscc	r2, r2, r7, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3720 	eorcc	r3, lr, #32, 14	; 0x800000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	30373130 	eorscc	r3, r7, r0, lsr r1
  48:	20343039 	eorscs	r3, r4, r9, lsr r0
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	652f4d52 	strvs	r4, [pc, #-3410]!	; fffff30e <__aeabi_idiv0+0xdfffecea>
  5c:	6465626d 	strbtvs	r6, [r5], #-621	; 0xfffffd93
  60:	2d646564 	cfstr64cs	mvdx6, [r4, #-400]!	; 0xfffffe70
  64:	72622d37 	rsbvc	r2, r2, #3520	; 0xdc0
  68:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  6c:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  70:	6f697369 	svcvs	0x00697369
  74:	3532206e 	ldrcc	r2, [r2, #-110]!	; 0xffffff92
  78:	34303235 	ldrtcc	r3, [r0], #-565	; 0xfffffdcb
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002b41 	andeq	r2, r0, r1, asr #22
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000021 	andeq	r0, r0, r1, lsr #32
  10:	2d533605 	ldclcs	6, cr3, [r3, #-20]	; 0xffffffec
  14:	0c06004d 	stceq	0, cr0, [r6], {77}	; 0x4d
  18:	01094d07 	tsteq	r9, r7, lsl #26
  1c:	01140412 	tsteq	r4, r2, lsl r4
  20:	03170115 	tsteq	r7, #1073741829	; 0x40000005
  24:	01190118 	tsteq	r9, r8, lsl r1
  28:	061e011a 			; <UNDEFINED> instruction: 0x061e011a

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000024 	andeq	r0, r0, r4, lsr #32
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000034 	andcs	r0, r0, r4, lsr r0
  48:	00000044 	andeq	r0, r0, r4, asr #32
  4c:	40080e41 	andmi	r0, r8, r1, asr #28
  50:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  54:	180e4101 	stmdane	lr, {r0, r8, lr}
  58:	00070d41 	andeq	r0, r7, r1, asr #26
  5c:	0000001c 	andeq	r0, r0, ip, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	20000078 	andcs	r0, r0, r8, ror r0
  68:	00000048 	andeq	r0, r0, r8, asr #32
  6c:	40080e41 	andmi	r0, r8, r1, asr #28
  70:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  74:	180e4101 	stmdane	lr, {r0, r8, lr}
  78:	00070d41 	andeq	r0, r7, r1, asr #26
  7c:	0000001c 	andeq	r0, r0, ip, lsl r0
  80:	00000000 	andeq	r0, r0, r0
  84:	200000c0 	andcs	r0, r0, r0, asr #1
  88:	00000030 	andeq	r0, r0, r0, lsr r0
  8c:	40080e41 	andmi	r0, r8, r1, asr #28
  90:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  94:	100e4101 	andne	r4, lr, r1, lsl #2
  98:	00070d41 	andeq	r0, r7, r1, asr #26
  9c:	0000001c 	andeq	r0, r0, ip, lsl r0
  a0:	00000000 	andeq	r0, r0, r0
  a4:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
  a8:	00000034 	andeq	r0, r0, r4, lsr r0
  ac:	40080e41 	andmi	r0, r8, r1, asr #28
  b0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  b4:	100e4101 	andne	r4, lr, r1, lsl #2
  b8:	00070d41 	andeq	r0, r7, r1, asr #26
  bc:	0000001c 	andeq	r0, r0, ip, lsl r0
  c0:	00000000 	andeq	r0, r0, r0
  c4:	20000124 	andcs	r0, r0, r4, lsr #2
  c8:	0000002a 	andeq	r0, r0, sl, lsr #32
  cc:	40080e41 	andmi	r0, r8, r1, asr #28
  d0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  d4:	100e4101 	andne	r4, lr, r1, lsl #2
  d8:	00070d41 	andeq	r0, r7, r1, asr #26
  dc:	0000001c 	andeq	r0, r0, ip, lsl r0
  e0:	00000000 	andeq	r0, r0, r0
  e4:	2000014e 	andcs	r0, r0, lr, asr #2
  e8:	0000002a 	andeq	r0, r0, sl, lsr #32
  ec:	40080e41 	andmi	r0, r8, r1, asr #28
  f0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  f4:	100e4101 	andne	r4, lr, r1, lsl #2
  f8:	00070d41 	andeq	r0, r7, r1, asr #26
  fc:	00000020 	andeq	r0, r0, r0, lsr #32
 100:	00000000 	andeq	r0, r0, r0
 104:	20000178 	andcs	r0, r0, r8, ror r1
 108:	0000004c 	andeq	r0, r0, ip, asr #32
 10c:	400c0e41 	andmi	r0, ip, r1, asr #28
 110:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 114:	018e4002 	orreq	r4, lr, r2
 118:	41180e41 	tstmi	r8, r1, asr #28
 11c:	0000070d 	andeq	r0, r0, sp, lsl #14
 120:	00000020 	andeq	r0, r0, r0, lsr #32
 124:	00000000 	andeq	r0, r0, r0
 128:	200001c4 	andcs	r0, r0, r4, asr #3
 12c:	0000004c 	andeq	r0, r0, ip, asr #32
 130:	400c0e41 	andmi	r0, ip, r1, asr #28
 134:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 138:	018e4002 	orreq	r4, lr, r2
 13c:	41180e41 	tstmi	r8, r1, asr #28
 140:	0000070d 	andeq	r0, r0, sp, lsl #14
 144:	0000001c 	andeq	r0, r0, ip, lsl r0
 148:	00000000 	andeq	r0, r0, r0
 14c:	20000210 	andcs	r0, r0, r0, lsl r2
 150:	00000016 	andeq	r0, r0, r6, lsl r0
 154:	40080e41 	andmi	r0, r8, r1, asr #28
 158:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 15c:	100e4101 	andne	r4, lr, r1, lsl #2
 160:	00070d41 	andeq	r0, r7, r1, asr #26
 164:	0000001c 	andeq	r0, r0, ip, lsl r0
 168:	00000000 	andeq	r0, r0, r0
 16c:	20000226 	andcs	r0, r0, r6, lsr #4
 170:	0000003c 	andeq	r0, r0, ip, lsr r0
 174:	40080e41 	andmi	r0, r8, r1, asr #28
 178:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 17c:	100e4101 	andne	r4, lr, r1, lsl #2
 180:	00070d41 	andeq	r0, r7, r1, asr #26
 184:	0000001c 	andeq	r0, r0, ip, lsl r0
 188:	00000000 	andeq	r0, r0, r0
 18c:	20000262 	andcs	r0, r0, r2, ror #4
 190:	00000052 	andeq	r0, r0, r2, asr r0
 194:	40080e41 	andmi	r0, r8, r1, asr #28
 198:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 19c:	100e4101 	andne	r4, lr, r1, lsl #2
 1a0:	00070d41 	andeq	r0, r7, r1, asr #26
 1a4:	0000001c 	andeq	r0, r0, ip, lsl r0
 1a8:	00000000 	andeq	r0, r0, r0
 1ac:	200002b4 			; <UNDEFINED> instruction: 0x200002b4
 1b0:	0000003c 	andeq	r0, r0, ip, lsr r0
 1b4:	40080e41 	andmi	r0, r8, r1, asr #28
 1b8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 1bc:	100e4101 	andne	r4, lr, r1, lsl #2
 1c0:	00070d41 	andeq	r0, r7, r1, asr #26
 1c4:	0000001c 	andeq	r0, r0, ip, lsl r0
 1c8:	00000000 	andeq	r0, r0, r0
 1cc:	200002f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 1d0:	00000036 	andeq	r0, r0, r6, lsr r0
 1d4:	40080e41 	andmi	r0, r8, r1, asr #28
 1d8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 1dc:	180e4101 	stmdane	lr, {r0, r8, lr}
 1e0:	00070d41 	andeq	r0, r7, r1, asr #26
 1e4:	00000018 	andeq	r0, r0, r8, lsl r0
 1e8:	00000000 	andeq	r0, r0, r0
 1ec:	20000326 	andcs	r0, r0, r6, lsr #6
 1f0:	0000009a 	muleq	r0, sl, r0
 1f4:	40080e41 	andmi	r0, r8, r1, asr #28
 1f8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 1fc:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 200:	00000024 	andeq	r0, r0, r4, lsr #32
 204:	00000000 	andeq	r0, r0, r0
 208:	200003c0 	andcs	r0, r0, r0, asr #7
 20c:	00000090 	muleq	r0, r0, r0
 210:	40100e41 	andsmi	r0, r0, r1, asr #28
 214:	85400484 	strbhi	r0, [r0, #-1156]	; 0xfffffb7c
 218:	02874003 	addeq	r4, r7, #3
 21c:	41018e40 	tstmi	r1, r0, asr #28
 220:	0d41400e 	stcleq	0, cr4, [r1, #-56]	; 0xffffffc8
 224:	00000007 	andeq	r0, r0, r7
 228:	0000000c 	andeq	r0, r0, ip
 22c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 230:	7c010001 	stcvc	0, cr0, [r1], {1}
 234:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 238:	0000000c 	andeq	r0, r0, ip
 23c:	00000228 	andeq	r0, r0, r8, lsr #4
 240:	20000451 	andcs	r0, r0, r1, asr r4
 244:	000001cc 	andeq	r0, r0, ip, asr #3
