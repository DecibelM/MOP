
./Debug/keypad.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
#define GPIO_IDR_HIGH ((volatile unsigned char *) (GPIO_D+0x11))  
#define GPIO_ODR_LOW ((volatile unsigned char *) (GPIO_D+0x14))  
#define GPIO_ODR_HIGH ((volatile unsigned char *) (GPIO_D+0x15)) 
void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f8ce 	bl	200001a4 <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
 " LDR R0,=0x2001C000\n"  /* set stack */
 " MOV SP,R0\n"
 " BL main\n"    /* call main */
 "_exit: B .\n"    /* never return */
 ) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <app_init>:


void app_init(void)
{
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
 * ( (unsigned int *) GPIO_MODER )= 0x55005555;
20000014:	4b06      	ldr	r3, [pc, #24]	; (20000030 <app_init+0x20>)
20000016:	4a07      	ldr	r2, [pc, #28]	; (20000034 <app_init+0x24>)
20000018:	601a      	str	r2, [r3, #0]
 * ( (unsigned short *) GPIO_OTYPER) = 0x0100;
2000001a:	4b07      	ldr	r3, [pc, #28]	; (20000038 <app_init+0x28>)
2000001c:	2280      	movs	r2, #128	; 0x80
2000001e:	0052      	lsls	r2, r2, #1
20000020:	801a      	strh	r2, [r3, #0]
 * ( (unsigned int *) GPIO_PUPDR) = 0x00AA0000;
20000022:	4b06      	ldr	r3, [pc, #24]	; (2000003c <app_init+0x2c>)
20000024:	22aa      	movs	r2, #170	; 0xaa
20000026:	0412      	lsls	r2, r2, #16
20000028:	601a      	str	r2, [r3, #0]
}
2000002a:	46c0      	nop			; (mov r8, r8)
2000002c:	46bd      	mov	sp, r7
2000002e:	bd80      	pop	{r7, pc}
20000030:	40020c00 	andmi	r0, r2, r0, lsl #24
20000034:	55005555 	strpl	r5, [r0, #-1365]	; 0xfffffaab
20000038:	40020c04 	andmi	r0, r2, r4, lsl #24
2000003c:	40020c0c 	andmi	r0, r2, ip, lsl #24

20000040 <keyb>:

unsigned char keyb(void) 
{ 
20000040:	b590      	push	{r4, r7, lr}
20000042:	b087      	sub	sp, #28
20000044:	af00      	add	r7, sp, #0
 unsigned char key[]={1,2,3,0xA,4,5,6,0xB,7,8,9,0xC,0xE,0,0xF,0xD}; 
20000046:	003b      	movs	r3, r7
20000048:	4a16      	ldr	r2, [pc, #88]	; (200000a4 <keyb+0x64>)
2000004a:	ca13      	ldmia	r2!, {r0, r1, r4}
2000004c:	c313      	stmia	r3!, {r0, r1, r4}
2000004e:	6812      	ldr	r2, [r2, #0]
20000050:	601a      	str	r2, [r3, #0]
 int row, col; 
 for (row=1; row <=4 ; row++ ) { 
20000052:	2301      	movs	r3, #1
20000054:	617b      	str	r3, [r7, #20]
20000056:	e019      	b.n	2000008c <keyb+0x4c>
  kbdActivate(row); 
20000058:	697b      	ldr	r3, [r7, #20]
2000005a:	0018      	movs	r0, r3
2000005c:	f000 f824 	bl	200000a8 <kbdActivate>
  col = kbdGetCol();
20000060:	f000 f84c 	bl	200000fc <kbdGetCol>
20000064:	0003      	movs	r3, r0
20000066:	613b      	str	r3, [r7, #16]
  if( col != 0 ) { 
20000068:	693b      	ldr	r3, [r7, #16]
2000006a:	2b00      	cmp	r3, #0
2000006c:	d00b      	beq.n	20000086 <keyb+0x46>
   kbdActivate( 0 ); 
2000006e:	2000      	movs	r0, #0
20000070:	f000 f81a 	bl	200000a8 <kbdActivate>
   return key [4*(row-1)+(col-1) ]; 
20000074:	697b      	ldr	r3, [r7, #20]
20000076:	3b01      	subs	r3, #1
20000078:	009a      	lsls	r2, r3, #2
2000007a:	693b      	ldr	r3, [r7, #16]
2000007c:	3b01      	subs	r3, #1
2000007e:	18d3      	adds	r3, r2, r3
20000080:	003a      	movs	r2, r7
20000082:	5cd3      	ldrb	r3, [r2, r3]
20000084:	e009      	b.n	2000009a <keyb+0x5a>
 for (row=1; row <=4 ; row++ ) { 
20000086:	697b      	ldr	r3, [r7, #20]
20000088:	3301      	adds	r3, #1
2000008a:	617b      	str	r3, [r7, #20]
2000008c:	697b      	ldr	r3, [r7, #20]
2000008e:	2b04      	cmp	r3, #4
20000090:	dde2      	ble.n	20000058 <keyb+0x18>
  } 
 } 
 kbdActivate( 0 ); 
20000092:	2000      	movs	r0, #0
20000094:	f000 f808 	bl	200000a8 <kbdActivate>
 return 0xFF; 
20000098:	23ff      	movs	r3, #255	; 0xff
}
2000009a:	0018      	movs	r0, r3
2000009c:	46bd      	mov	sp, r7
2000009e:	b007      	add	sp, #28
200000a0:	bd90      	pop	{r4, r7, pc}
200000a2:	46c0      	nop			; (mov r8, r8)
200000a4:	200001c4 	andcs	r0, r0, r4, asr #3

200000a8 <kbdActivate>:

void kbdActivate( unsigned int row ) /* Aktivera angiven rad hos tangentbordet, eller * deaktivera samtliga */
{  
200000a8:	b580      	push	{r7, lr}
200000aa:	b082      	sub	sp, #8
200000ac:	af00      	add	r7, sp, #0
200000ae:	6078      	str	r0, [r7, #4]
 switch( row ) 
200000b0:	687b      	ldr	r3, [r7, #4]
200000b2:	2b04      	cmp	r3, #4
200000b4:	d819      	bhi.n	200000ea <kbdActivate+0x42>
200000b6:	687b      	ldr	r3, [r7, #4]
200000b8:	009a      	lsls	r2, r3, #2
200000ba:	4b0e      	ldr	r3, [pc, #56]	; (200000f4 <kbdActivate+0x4c>)
200000bc:	18d3      	adds	r3, r2, r3
200000be:	681b      	ldr	r3, [r3, #0]
200000c0:	469f      	mov	pc, r3
 { 
  case 1: *GPIO_ODR_HIGH = 0x10; break; 
200000c2:	4b0d      	ldr	r3, [pc, #52]	; (200000f8 <kbdActivate+0x50>)
200000c4:	2210      	movs	r2, #16
200000c6:	701a      	strb	r2, [r3, #0]
200000c8:	e00f      	b.n	200000ea <kbdActivate+0x42>
  case 2: *GPIO_ODR_HIGH = 0x20; break; 
200000ca:	4b0b      	ldr	r3, [pc, #44]	; (200000f8 <kbdActivate+0x50>)
200000cc:	2220      	movs	r2, #32
200000ce:	701a      	strb	r2, [r3, #0]
200000d0:	e00b      	b.n	200000ea <kbdActivate+0x42>
  case 3: *GPIO_ODR_HIGH = 0x40; break; 
200000d2:	4b09      	ldr	r3, [pc, #36]	; (200000f8 <kbdActivate+0x50>)
200000d4:	2240      	movs	r2, #64	; 0x40
200000d6:	701a      	strb	r2, [r3, #0]
200000d8:	e007      	b.n	200000ea <kbdActivate+0x42>
  case 4: *GPIO_ODR_HIGH = 0x80; break; 
200000da:	4b07      	ldr	r3, [pc, #28]	; (200000f8 <kbdActivate+0x50>)
200000dc:	2280      	movs	r2, #128	; 0x80
200000de:	701a      	strb	r2, [r3, #0]
200000e0:	e003      	b.n	200000ea <kbdActivate+0x42>
  case 0: *GPIO_ODR_HIGH = 0x00; break; 
200000e2:	4b05      	ldr	r3, [pc, #20]	; (200000f8 <kbdActivate+0x50>)
200000e4:	2200      	movs	r2, #0
200000e6:	701a      	strb	r2, [r3, #0]
200000e8:	46c0      	nop			; (mov r8, r8)
 } 
}
200000ea:	46c0      	nop			; (mov r8, r8)
200000ec:	46bd      	mov	sp, r7
200000ee:	b002      	add	sp, #8
200000f0:	bd80      	pop	{r7, pc}
200000f2:	46c0      	nop			; (mov r8, r8)
200000f4:	200001d4 	ldrdcs	r0, [r0], -r4
200000f8:	40020c15 	andmi	r0, r2, r5, lsl ip

200000fc <kbdGetCol>:
int kbdGetCol ( void )  /* Om någon tangent (i aktiverad rad) * är nedtryckt, returnera dess kolumnnummer, * annars, returnera 0 */ 
{
200000fc:	b580      	push	{r7, lr}
200000fe:	b082      	sub	sp, #8
20000100:	af00      	add	r7, sp, #0
 unsigned char c; 
 c = *GPIO_IDR_HIGH; 
20000102:	4a12      	ldr	r2, [pc, #72]	; (2000014c <kbdGetCol+0x50>)
20000104:	1dfb      	adds	r3, r7, #7
20000106:	7812      	ldrb	r2, [r2, #0]
20000108:	701a      	strb	r2, [r3, #0]
 if ( c & 0x8 ) return 4; 
2000010a:	1dfb      	adds	r3, r7, #7
2000010c:	781b      	ldrb	r3, [r3, #0]
2000010e:	2208      	movs	r2, #8
20000110:	4013      	ands	r3, r2
20000112:	d001      	beq.n	20000118 <kbdGetCol+0x1c>
20000114:	2304      	movs	r3, #4
20000116:	e015      	b.n	20000144 <kbdGetCol+0x48>
 if ( c & 0x4 ) return 3;
20000118:	1dfb      	adds	r3, r7, #7
2000011a:	781b      	ldrb	r3, [r3, #0]
2000011c:	2204      	movs	r2, #4
2000011e:	4013      	ands	r3, r2
20000120:	d001      	beq.n	20000126 <kbdGetCol+0x2a>
20000122:	2303      	movs	r3, #3
20000124:	e00e      	b.n	20000144 <kbdGetCol+0x48>
 if ( c & 0x2 ) return 2;
20000126:	1dfb      	adds	r3, r7, #7
20000128:	781b      	ldrb	r3, [r3, #0]
2000012a:	2202      	movs	r2, #2
2000012c:	4013      	ands	r3, r2
2000012e:	d001      	beq.n	20000134 <kbdGetCol+0x38>
20000130:	2302      	movs	r3, #2
20000132:	e007      	b.n	20000144 <kbdGetCol+0x48>
 if ( c & 0x1 ) return 1; 
20000134:	1dfb      	adds	r3, r7, #7
20000136:	781b      	ldrb	r3, [r3, #0]
20000138:	2201      	movs	r2, #1
2000013a:	4013      	ands	r3, r2
2000013c:	d001      	beq.n	20000142 <kbdGetCol+0x46>
2000013e:	2301      	movs	r3, #1
20000140:	e000      	b.n	20000144 <kbdGetCol+0x48>
 return 0; 
20000142:	2300      	movs	r3, #0
}
20000144:	0018      	movs	r0, r3
20000146:	46bd      	mov	sp, r7
20000148:	b002      	add	sp, #8
2000014a:	bd80      	pop	{r7, pc}
2000014c:	40020c11 	andmi	r0, r2, r1, lsl ip

20000150 <out7seg>:

void out7seg(unsigned char c)
{
20000150:	b590      	push	{r4, r7, lr}
20000152:	b089      	sub	sp, #36	; 0x24
20000154:	af00      	add	r7, sp, #0
20000156:	0002      	movs	r2, r0
20000158:	1dfb      	adds	r3, r7, #7
2000015a:	701a      	strb	r2, [r3, #0]
 unsigned char key[] = {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71};
2000015c:	230c      	movs	r3, #12
2000015e:	18fb      	adds	r3, r7, r3
20000160:	4a0e      	ldr	r2, [pc, #56]	; (2000019c <out7seg+0x4c>)
20000162:	ca13      	ldmia	r2!, {r0, r1, r4}
20000164:	c313      	stmia	r3!, {r0, r1, r4}
20000166:	6812      	ldr	r2, [r2, #0]
20000168:	601a      	str	r2, [r3, #0]
 if(c <=15)
2000016a:	1dfb      	adds	r3, r7, #7
2000016c:	781b      	ldrb	r3, [r3, #0]
2000016e:	2b0f      	cmp	r3, #15
20000170:	d80c      	bhi.n	2000018c <out7seg+0x3c>
 {
  unsigned char ourKey = key[c];
20000172:	1dfb      	adds	r3, r7, #7
20000174:	781a      	ldrb	r2, [r3, #0]
20000176:	201f      	movs	r0, #31
20000178:	183b      	adds	r3, r7, r0
2000017a:	210c      	movs	r1, #12
2000017c:	1879      	adds	r1, r7, r1
2000017e:	5c8a      	ldrb	r2, [r1, r2]
20000180:	701a      	strb	r2, [r3, #0]
  *GPIO_ODR_LOW = ourKey;
20000182:	4a07      	ldr	r2, [pc, #28]	; (200001a0 <out7seg+0x50>)
20000184:	183b      	adds	r3, r7, r0
20000186:	781b      	ldrb	r3, [r3, #0]
20000188:	7013      	strb	r3, [r2, #0]
 }
 else 
 {
  *GPIO_ODR_LOW = 0x00;
 }
}
2000018a:	e002      	b.n	20000192 <out7seg+0x42>
  *GPIO_ODR_LOW = 0x00;
2000018c:	4b04      	ldr	r3, [pc, #16]	; (200001a0 <out7seg+0x50>)
2000018e:	2200      	movs	r2, #0
20000190:	701a      	strb	r2, [r3, #0]
}
20000192:	46c0      	nop			; (mov r8, r8)
20000194:	46bd      	mov	sp, r7
20000196:	b009      	add	sp, #36	; 0x24
20000198:	bd90      	pop	{r4, r7, pc}
2000019a:	46c0      	nop			; (mov r8, r8)
2000019c:	200001e8 	andcs	r0, r0, r8, ror #3
200001a0:	40020c14 	andmi	r0, r2, r4, lsl ip

200001a4 <main>:
 
 void main(void)
{
200001a4:	b590      	push	{r4, r7, lr}
200001a6:	b083      	sub	sp, #12
200001a8:	af00      	add	r7, sp, #0
 app_init();
200001aa:	f7ff ff31 	bl	20000010 <app_init>
 while(1)
 {
  unsigned char key = keyb();
200001ae:	1dfc      	adds	r4, r7, #7
200001b0:	f7ff ff46 	bl	20000040 <keyb>
200001b4:	0003      	movs	r3, r0
200001b6:	7023      	strb	r3, [r4, #0]
  out7seg(key);
200001b8:	1dfb      	adds	r3, r7, #7
200001ba:	781b      	ldrb	r3, [r3, #0]
200001bc:	0018      	movs	r0, r3
200001be:	f7ff ffc7 	bl	20000150 <out7seg>
 {
200001c2:	e7f4      	b.n	200001ae <main+0xa>
200001c4:	0a030201 	beq	200c09d0 <main+0xc082c>
200001c8:	0b060504 	bleq	201815e0 <main+0x18143c>
200001cc:	0c090807 	stceq	8, cr0, [r9], {7}
200001d0:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 200001a0 <out7seg+0x50>
200001d4:	200000e2 	andcs	r0, r0, r2, ror #1
200001d8:	200000c2 	andcs	r0, r0, r2, asr #1
200001dc:	200000ca 	andcs	r0, r0, sl, asr #1
200001e0:	200000d2 	ldrdcs	r0, [r0], -r2
200001e4:	200000da 	ldrdcs	r0, [r0], -sl
200001e8:	4f5b063f 	svcmi	0x005b063f
200001ec:	077d6d66 	ldrbeq	r6, [sp, -r6, ror #26]!
200001f0:	7c776f7f 	ldclvc	15, cr6, [r7], #-508	; 0xfffffe04
200001f4:	71795e39 	cmnvc	r9, r9, lsr lr

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000000d5 	ldrdeq	r0, [r0], -r5
   4:	004b0002 	subeq	r0, fp, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	6972614d 	ldmdbvs	r2!, {r0, r2, r3, r6, r8, sp, lr}^
  28:	6f442f61 	svcvs	0x00442f61
  2c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
  30:	2f73746e 	svccs	0x0073746e
  34:	4d2f5449 	cfstrsmi	mvf5, [pc, #-292]!	; ffffff18 <main+0xdffffd74>
  38:	4d2f504f 	stcmi	0, cr5, [pc, #-316]!	; ffffff04 <main+0xdffffd60>
  3c:	6b2f504f 	blvs	bd4180 <startup-0x1f42be80>
  40:	61707965 	cmnvs	r0, r5, ror #18
  44:	73000064 	movwvc	r0, #100	; 0x64
  48:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  4c:	632e7075 			; <UNDEFINED> instruction: 0x632e7075
  50:	00000100 	andeq	r0, r0, r0, lsl #2
  54:	02050000 	andeq	r0, r5, #0
  58:	20000000 	andcs	r0, r0, r0
  5c:	13010e03 	movwne	r0, #7683	; 0x1e03
  60:	0003025e 	andeq	r0, r3, lr, asr r2
  64:	05000101 	streq	r0, [r0, #-257]	; 0xfffffeff
  68:	00001002 	andeq	r1, r0, r2
  6c:	01190320 	tsteq	r9, r0, lsr #6
  70:	4b4b3d2f 	blmi	12cf534 <startup-0x1ed30acc>
  74:	3d683daf 	stclcc	13, cr3, [r8, #-700]!	; 0xfffffd44
  78:	3d3d4b4b 	fldmdbxcc	sp!, {d4-d40}	;@ Deprecated
  7c:	02040200 	andeq	r0, r4, #0, 4
  80:	0402008b 	streq	r0, [r2], #-139	; 0xffffff75
  84:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
  88:	02003d44 	andeq	r3, r0, #68, 26	; 0x1100
  8c:	77210104 	strvc	r0, [r1, -r4, lsl #2]!
  90:	4b4b924b 	blmi	12e49c4 <startup-0x1ed1b63c>
  94:	924c4b4b 	subls	r4, ip, #76800	; 0x12c00
  98:	02004b3e 	andeq	r4, r0, #63488	; 0xf800
  9c:	58060104 	stmdapl	r6, {r2, r8}
  a0:	02002f06 	andeq	r2, r0, #6, 30
  a4:	58060104 	stmdapl	r6, {r2, r8}
  a8:	02002f06 	andeq	r2, r0, #6, 30
  ac:	58060104 	stmdapl	r6, {r2, r8}
  b0:	02002f06 	andeq	r2, r0, #6, 30
  b4:	58060104 	stmdapl	r6, {r2, r8}
  b8:	69212f06 	stmdbvs	r1!, {r1, r2, r8, r9, sl, fp, sp}
  bc:	834c7567 	movthi	r7, #50535	; 0xc567
  c0:	933e1e50 	teqls	lr, #80, 28	; 0x500
  c4:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
  c8:	02003101 	andeq	r3, r0, #1073741824	; 0x40000000
  cc:	00590104 	subseq	r0, r9, r4, lsl #2
  d0:	56010402 	strpl	r0, [r1], -r2, lsl #8
  d4:	01000102 	tsteq	r0, r2, lsl #2
  d8:	Address 0x000000d8 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	555c3a43 	ldrbpl	r3, [ip, #-2627]	; 0xfffff5bd
   4:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
   8:	72614d5c 	rsbvc	r4, r1, #92, 26	; 0x1700
   c:	445c6169 	ldrbmi	r6, [ip], #-361	; 0xfffffe97
  10:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
  14:	73746e65 	cmnvc	r4, #1616	; 0x650
  18:	5c54495c 	mrrcpl	9, 5, r4, r4, cr12	; <UNPREDICTABLE>
  1c:	5c504f4d 	mrrcpl	15, 4, r4, r0, cr13
  20:	5c504f4d 	mrrcpl	15, 4, r4, r0, cr13
  24:	7079656b 	rsbsvc	r6, r9, fp, ror #10
  28:	47006461 	strmi	r6, [r0, -r1, ror #8]
  2c:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
  30:	37203939 			; <UNDEFINED> instruction: 0x37203939
  34:	312e322e 			; <UNDEFINED> instruction: 0x312e322e
  38:	31303220 	teqcc	r0, r0, lsr #4
  3c:	30393037 	eorscc	r3, r9, r7, lsr r0
  40:	72282034 	eorvc	r2, r8, #52	; 0x34
  44:	61656c65 	cmnvs	r5, r5, ror #24
  48:	20296573 	eorcs	r6, r9, r3, ror r5
  4c:	4d52415b 	ldfmie	f4, [r2, #-364]	; 0xfffffe94
  50:	626d652f 	rsbvs	r6, sp, #197132288	; 0xbc00000
  54:	65646465 	strbvs	r6, [r4, #-1125]!	; 0xfffffb9b
  58:	2d372d64 	ldccs	13, cr2, [r7, #-400]!	; 0xfffffe70
  5c:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
  60:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
  64:	73697665 	cmnvc	r9, #105906176	; 0x6500000
  68:	206e6f69 	rsbcs	r6, lr, r9, ror #30
  6c:	32353532 	eorscc	r3, r5, #209715200	; 0xc800000
  70:	205d3430 	subscs	r3, sp, r0, lsr r4
  74:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
  78:	20626d75 	rsbcs	r6, r2, r5, ror sp
  7c:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
  80:	613d6863 	teqvs	sp, r3, ror #16
  84:	36766d72 			; <UNDEFINED> instruction: 0x36766d72
  88:	2d206d2d 	stccs	13, cr6, [r0, #-180]!	; 0xffffff4c
  8c:	6f6c666d 	svcvs	0x006c666d
  90:	612d7461 			; <UNDEFINED> instruction: 0x612d7461
  94:	733d6962 	teqvc	sp, #1605632	; 0x188000
  98:	2074666f 	rsbscs	r6, r4, pc, ror #12
  9c:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
  a0:	20626d75 	rsbcs	r6, r2, r5, ror sp
  a4:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
  a8:	613d6863 	teqvs	sp, r3, ror #16
  ac:	36766d72 			; <UNDEFINED> instruction: 0x36766d72
  b0:	2d206d2d 	stccs	13, cr6, [r0, #-180]!	; 0xffffff4c
  b4:	4f2d2067 	svcmi	0x002d2067
  b8:	732d2030 			; <UNDEFINED> instruction: 0x732d2030
  bc:	633d6474 	teqvs	sp, #116, 8	; 0x74000000
  c0:	43003939 	movwmi	r3, #2361	; 0x939
  c4:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  c8:	2f737265 	svccs	0x00737265
  cc:	6972614d 	ldmdbvs	r2!, {r0, r2, r3, r6, r8, sp, lr}^
  d0:	6f442f61 	svcvs	0x00442f61
  d4:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
  d8:	2f73746e 	svccs	0x0073746e
  dc:	4d2f5449 	cfstrsmi	mvf5, [pc, #-292]!	; ffffffc0 <main+0xdffffe1c>
  e0:	4d2f504f 	stcmi	0, cr5, [pc, #-316]!	; ffffffac <main+0xdffffe08>
  e4:	6b2f504f 	blvs	bd4228 <startup-0x1f42bdd8>
  e8:	61707965 	cmnvs	r0, r5, ror #18
  ec:	616d2f64 	cmnvs	sp, r4, ror #30
  f0:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
  f4:	736e7500 	cmnvc	lr, #0, 10
  f8:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
  fc:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
 100:	6e750074 	mrcvs	0, 3, r0, cr5, cr4, {3}
 104:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 108:	63206465 			; <UNDEFINED> instruction: 0x63206465
 10c:	00726168 	rsbseq	r6, r2, r8, ror #2
 110:	4164626b 	cmnmi	r4, fp, ror #4
 114:	76697463 	strbtvc	r7, [r9], -r3, ror #8
 118:	00657461 	rsbeq	r7, r5, r1, ror #8
 11c:	4764626b 	strbmi	r6, [r4, -fp, ror #4]!
 120:	6f437465 	svcvs	0x00437465
 124:	756f006c 	strbvc	r0, [pc, #-108]!	; c0 <startup-0x1fffff40>
 128:	65733774 	ldrbvs	r3, [r3, #-1908]!	; 0xfffff88c
 12c:	656b0067 	strbvs	r0, [fp, #-103]!	; 0xffffff99
 130:	43006279 	movwmi	r6, #633	; 0x279
 134:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
 138:	2f737265 	svccs	0x00737265
 13c:	6972614d 	ldmdbvs	r2!, {r0, r2, r3, r6, r8, sp, lr}^
 140:	6f442f61 	svcvs	0x00442f61
 144:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 148:	2f73746e 	svccs	0x0073746e
 14c:	4d2f5449 	cfstrsmi	mvf5, [pc, #-292]!	; 30 <startup-0x1fffffd0>
 150:	4d2f504f 	stcmi	0, cr5, [pc, #-316]!	; 1c <startup-0x1fffffe4>
 154:	6b2f504f 	blvs	bd4298 <startup-0x1f42bd68>
 158:	61707965 	cmnvs	r0, r5, ror #18
 15c:	74732f64 	ldrbtvc	r2, [r3], #-3940	; 0xfffff09c
 160:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
 164:	00632e70 	rsbeq	r2, r3, r0, ror lr
 168:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 16c:	00707574 	rsbseq	r7, r0, r4, ror r5
 170:	6e69616d 	powvsez	f6, f1, #5.0
 174:	72756f00 	rsbsvc	r6, r5, #0, 30
 178:	0079654b 	rsbseq	r6, r9, fp, asr #10
 17c:	5f707061 	svcpl	0x00707061
 180:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d37 	eorscc	r2, r2, r7, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3720 	eorcc	r3, lr, #32, 14	; 0x800000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	30373130 	eorscc	r3, r7, r0, lsr r1
  48:	20343039 	eorscs	r3, r4, r9, lsr r0
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	652f4d52 	strvs	r4, [pc, #-3410]!	; fffff30e <main+0xdffff16a>
  5c:	6465626d 	strbtvs	r6, [r5], #-621	; 0xfffffd93
  60:	2d646564 	cfstr64cs	mvdx6, [r4, #-400]!	; 0xfffffe70
  64:	72622d37 	rsbvc	r2, r2, #3520	; 0xdc0
  68:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  6c:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  70:	6f697369 	svcvs	0x00697369
  74:	3532206e 	ldrcc	r2, [r2, #-110]!	; 0xffffff92
  78:	34303235 	ldrtcc	r3, [r0], #-565	; 0xfffffdcb
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	000001a6 	andeq	r0, r0, r6, lsr #3
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	0000002b 	andeq	r0, r0, fp, lsr #32
  10:	0001330c 	andeq	r3, r1, ip, lsl #6
	...
  24:	01700200 	cmneq	r0, r0, lsl #4
  28:	54010000 	strpl	r0, [r1], #-0
  2c:	200001a4 	andcs	r0, r0, r4, lsr #3
  30:	00000020 	andeq	r0, r0, r0, lsr #32
  34:	00539c01 	subseq	r9, r3, r1, lsl #24
  38:	ae030000 	cdpge	0, 0, cr0, cr3, cr0, {0}
  3c:	14200001 	strtne	r0, [r0], #-1
  40:	04000000 	streq	r0, [r0], #-0
  44:	0079656b 	rsbseq	r6, r9, fp, ror #10
  48:	00535901 	subseq	r5, r3, r1, lsl #18
  4c:	91020000 	mrsls	r0, (UNDEF: 2)
  50:	0500006f 	streq	r0, [r0, #-111]	; 0xffffff91
  54:	01020801 	tsteq	r2, r1, lsl #16
  58:	26060000 	strcs	r0, [r6], -r0
  5c:	01000001 	tsteq	r0, r1
  60:	00015046 	andeq	r5, r1, r6, asr #32
  64:	00005420 	andeq	r5, r0, r0, lsr #8
  68:	a29c0100 	addsge	r0, ip, #0, 2
  6c:	07000000 	streq	r0, [r0, -r0]
  70:	46010063 	strmi	r0, [r1], -r3, rrx
  74:	00000053 	andeq	r0, r0, r3, asr r0
  78:	04579102 	ldrbeq	r9, [r7], #-258	; 0xfffffefe
  7c:	0079656b 	rsbseq	r6, r9, fp, ror #10
  80:	00a24801 	adceq	r4, r2, r1, lsl #16
  84:	91020000 	mrsls	r0, (UNDEF: 2)
  88:	0172035c 	cmneq	r2, ip, asr r3
  8c:	00182000 	andseq	r2, r8, r0
  90:	75080000 	strvc	r0, [r8, #-0]
  94:	01000001 	tsteq	r0, r1
  98:	0000534b 	andeq	r5, r0, fp, asr #6
  9c:	6f910200 	svcvs	0x00910200
  a0:	53090000 	movwpl	r0, #36864	; 0x9000
  a4:	b2000000 	andlt	r0, r0, #0
  a8:	0a000000 	beq	b0 <startup-0x1fffff50>
  ac:	000000b2 	strheq	r0, [r0], -r2
  b0:	0405000f 	streq	r0, [r5], #-15
  b4:	0000f507 	andeq	pc, r0, r7, lsl #10
  b8:	011c0b00 	tsteq	ip, r0, lsl #22
  bc:	3b010000 	blcc	400c4 <startup-0x1ffbff3c>
  c0:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
  c4:	200000fc 	strdcs	r0, [r0], -ip
  c8:	00000054 	andeq	r0, r0, r4, asr r0
  cc:	00df9c01 	sbcseq	r9, pc, r1, lsl #24
  d0:	63040000 	movwvs	r0, #16384	; 0x4000
  d4:	533d0100 	teqpl	sp, #0, 2
  d8:	02000000 	andeq	r0, r0, #0
  dc:	0c007791 	stceq	7, cr7, [r0], {145}	; 0x91
  e0:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
  e4:	10060074 	andne	r0, r6, r4, ror r0
  e8:	01000001 	tsteq	r0, r1
  ec:	0000a830 	andeq	sl, r0, r0, lsr r8
  f0:	00005420 	andeq	r5, r0, r0, lsr #8
  f4:	0a9c0100 	beq	fe7004fc <main+0xde700358>
  f8:	07000001 	streq	r0, [r0, -r1]
  fc:	00776f72 	rsbseq	r6, r7, r2, ror pc
 100:	00b23001 	adcseq	r3, r2, r1
 104:	91020000 	mrsls	r0, (UNDEF: 2)
 108:	2e0d0074 	mcrcs	0, 0, r0, cr13, cr4, {3}
 10c:	01000001 	tsteq	r0, r1
 110:	00005320 	andeq	r5, r0, r0, lsr #6
 114:	00004000 	andeq	r4, r0, r0
 118:	00006820 	andeq	r6, r0, r0, lsr #16
 11c:	879c0100 	ldrhi	r0, [ip, r0, lsl #2]
 120:	04000001 	streq	r0, [r0], #-1
 124:	0079656b 	rsbseq	r6, r9, fp, ror #10
 128:	00a22201 	adceq	r2, r2, r1, lsl #4
 12c:	91020000 	mrsls	r0, (UNDEF: 2)
 130:	6f720458 	svcvs	0x00720458
 134:	23010077 	movwcs	r0, #4215	; 0x1077
 138:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
 13c:	046c9102 	strbteq	r9, [ip], #-258	; 0xfffffefe
 140:	006c6f63 	rsbeq	r6, ip, r3, ror #30
 144:	00df2301 	sbcseq	r2, pc, r1, lsl #6
 148:	91020000 	mrsls	r0, (UNDEF: 2)
 14c:	01100e68 	tsteq	r0, r8, ror #28
 150:	25010000 	strcs	r0, [r1, #-0]
 154:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
 158:	0000015e 	andeq	r0, r0, lr, asr r1
 15c:	5803000f 	stmdapl	r3, {r0, r1, r2, r3}
 160:	2e200000 	cdpcs	0, 2, cr0, cr0, cr0, {0}
 164:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
 168:	00000110 	andeq	r0, r0, r0, lsl r1
 16c:	00df2501 	sbcseq	r2, pc, r1, lsl #10
 170:	01780000 	cmneq	r8, r0
 174:	000f0000 	andeq	r0, pc, r0
 178:	00011c10 	andeq	r1, r1, r0, lsl ip
 17c:	df260100 	svcle	0x00260100
 180:	0f000000 	svceq	0x00000000
 184:	11000000 	mrsne	r0, (UNDEF: 0)
 188:	0000017c 	andeq	r0, r0, ip, ror r1
 18c:	00101901 	andseq	r1, r0, r1, lsl #18
 190:	00302000 	eorseq	r2, r0, r0
 194:	9c010000 	stcls	0, cr0, [r1], {-0}
 198:	00016811 	andeq	r6, r1, r1, lsl r8
 19c:	000e0100 	andeq	r0, lr, r0, lsl #2
 1a0:	0c200000 	stceq	0, cr0, [r0], #-0
 1a4:	01000000 	mrseq	r0, (UNDEF: 0)
 1a8:	Address 0x000001a8 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  18:	0b3a0e03 	bleq	e8382c <startup-0x1f17c7d4>
  1c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
  20:	06120111 			; <UNDEFINED> instruction: 0x06120111
  24:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  28:	00130119 	andseq	r0, r3, r9, lsl r1
  2c:	010b0300 	mrseq	r0, (UNDEF: 59)
  30:	06120111 			; <UNDEFINED> instruction: 0x06120111
  34:	34040000 	strcc	r0, [r4], #-0
  38:	3a080300 	bcc	200c40 <startup-0x1fdff3c0>
  3c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  40:	00180213 	andseq	r0, r8, r3, lsl r2
  44:	00240500 	eoreq	r0, r4, r0, lsl #10
  48:	0b3e0b0b 	bleq	f82c7c <startup-0x1f07d384>
  4c:	00000e03 	andeq	r0, r0, r3, lsl #28
  50:	3f012e06 	svccc	0x00012e06
  54:	3a0e0319 	bcc	380cc0 <startup-0x1fc7f340>
  58:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
  5c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  60:	97184006 	ldrls	r4, [r8, -r6]
  64:	13011942 	movwne	r1, #6466	; 0x1942
  68:	05070000 	streq	r0, [r7, #-0]
  6c:	3a080300 	bcc	200c74 <startup-0x1fdff38c>
  70:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  74:	00180213 	andseq	r0, r8, r3, lsl r2
  78:	00340800 	eorseq	r0, r4, r0, lsl #16
  7c:	0b3a0e03 	bleq	e83890 <startup-0x1f17c770>
  80:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  84:	00001802 	andeq	r1, r0, r2, lsl #16
  88:	49010109 	stmdbmi	r1, {r0, r3, r8}
  8c:	00130113 	andseq	r0, r3, r3, lsl r1
  90:	00210a00 	eoreq	r0, r1, r0, lsl #20
  94:	0b2f1349 	bleq	bc4dc0 <startup-0x1f43b240>
  98:	2e0b0000 	cdpcs	0, 0, cr0, cr11, cr0, {0}
  9c:	03193f01 	tsteq	r9, #1, 30
  a0:	3b0b3a0e 	blcc	2ce8e0 <startup-0x1fd31720>
  a4:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
  a8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
  ac:	97184006 	ldrls	r4, [r8, -r6]
  b0:	13011942 	movwne	r1, #6466	; 0x1942
  b4:	240c0000 	strcs	r0, [ip], #-0
  b8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  bc:	0008030b 	andeq	r0, r8, fp, lsl #6
  c0:	012e0d00 			; <UNDEFINED> instruction: 0x012e0d00
  c4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  c8:	0b3b0b3a 	bleq	ec2db8 <startup-0x1f13d248>
  cc:	13491927 	movtne	r1, #39207	; 0x9927
  d0:	06120111 			; <UNDEFINED> instruction: 0x06120111
  d4:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  d8:	00130119 	andseq	r0, r3, r9, lsl r1
  dc:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
  e0:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  e4:	0b3b0b3a 	bleq	ec2dd4 <startup-0x1f13d22c>
  e8:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
  ec:	00001301 	andeq	r1, r0, r1, lsl #6
  f0:	0000180f 	andeq	r1, r0, pc, lsl #16
  f4:	012e1000 			; <UNDEFINED> instruction: 0x012e1000
  f8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  fc:	0b3b0b3a 	bleq	ec2dec <startup-0x1f13d214>
 100:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
 104:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
 108:	03193f00 	tsteq	r9, #0, 30
 10c:	3b0b3a0e 	blcc	2ce94c <startup-0x1fd316b4>
 110:	1119270b 	tstne	r9, fp, lsl #14
 114:	40061201 	andmi	r1, r6, r1, lsl #4
 118:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 11c:	Address 0x0000011c is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	200001c4 	andcs	r0, r0, r4, asr #3
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000030 	andeq	r0, r0, r0, lsr r0
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	00000020 	andeq	r0, r0, r0, lsr #32
  40:	00000000 	andeq	r0, r0, r0
  44:	20000040 	andcs	r0, r0, r0, asr #32
  48:	00000068 	andeq	r0, r0, r8, rrx
  4c:	400c0e41 	andmi	r0, ip, r1, asr #28
  50:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  54:	018e4002 	orreq	r4, lr, r2
  58:	41280e41 			; <UNDEFINED> instruction: 0x41280e41
  5c:	0000070d 	andeq	r0, r0, sp, lsl #14
  60:	0000001c 	andeq	r0, r0, ip, lsl r0
  64:	00000000 	andeq	r0, r0, r0
  68:	200000a8 	andcs	r0, r0, r8, lsr #1
  6c:	00000054 	andeq	r0, r0, r4, asr r0
  70:	40080e41 	andmi	r0, r8, r1, asr #28
  74:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  78:	100e4101 	andne	r4, lr, r1, lsl #2
  7c:	00070d41 	andeq	r0, r7, r1, asr #26
  80:	0000001c 	andeq	r0, r0, ip, lsl r0
  84:	00000000 	andeq	r0, r0, r0
  88:	200000fc 	strdcs	r0, [r0], -ip
  8c:	00000054 	andeq	r0, r0, r4, asr r0
  90:	40080e41 	andmi	r0, r8, r1, asr #28
  94:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  98:	100e4101 	andne	r4, lr, r1, lsl #2
  9c:	00070d41 	andeq	r0, r7, r1, asr #26
  a0:	00000020 	andeq	r0, r0, r0, lsr #32
  a4:	00000000 	andeq	r0, r0, r0
  a8:	20000150 	andcs	r0, r0, r0, asr r1
  ac:	00000054 	andeq	r0, r0, r4, asr r0
  b0:	400c0e41 	andmi	r0, ip, r1, asr #28
  b4:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  b8:	018e4002 	orreq	r4, lr, r2
  bc:	41300e41 	teqmi	r0, r1, asr #28
  c0:	0000070d 	andeq	r0, r0, sp, lsl #14
  c4:	00000020 	andeq	r0, r0, r0, lsr #32
  c8:	00000000 	andeq	r0, r0, r0
  cc:	200001a4 	andcs	r0, r0, r4, lsr #3
  d0:	00000020 	andeq	r0, r0, r0, lsr #32
  d4:	400c0e41 	andmi	r0, ip, r1, asr #28
  d8:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  dc:	018e4002 	orreq	r4, lr, r2
  e0:	41180e41 	tstmi	r8, r1, asr #28
  e4:	0000070d 	andeq	r0, r0, sp, lsl #14
